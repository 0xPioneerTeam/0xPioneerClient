export let VERSION = "test"; // test、main、localhost

let contract_config = {
    chainId: "421613",
    chainName: "Arbitrum Goerli",
    nativeCurrency: {
        name: "AGOR",
        symbol: "AGOR",
        decimals: 18,
    },
    rpcUrls: ["https://goerli-rollup.arbitrum.io/rpc"],
    blockExplorerUrls: ["https://goerli.arbiscan.io"],
    txUrlPrefix: "https://goerli.arbiscan.io/tx/",
    charge: {
        addr: {
            mintfee: "0x9812752121fb9eBEc49A4B8153240866156E87C5",
            unbindfee: "0x9812752121fb9eBEc49A4B8153240866156E87C5",
            goldcharge: "0x9812752121fb9eBEc49A4B8153240866156E87C5",
        },
        fee: {},
    },
    oracle_rand_extra_fee: "1300000000000000",
    batch10_oracle_rand_extra_fee: "6500000000000000",
    expedition_tms_per_block: 12,
};

let contract_abi = {
    contracts: {
        MockERC20: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xD55Ed7182f8eEA5b88A711EA9565dF54311e3c1b",
            abi: [
                "constructor()",
                "event Approval(address indexed owner, address indexed spender, uint256 value)",
                "event Transfer(address indexed from, address indexed to, uint256 value)",
                "function allowance(address owner, address spender) view returns (uint256)",
                "function approve(address spender, uint256 amount) returns (bool)",
                "function balanceOf(address account) view returns (uint256)",
                "function burn(uint256 amount)",
                "function burnFrom(address account, uint256 amount)",
                "function decimals() view returns (uint8)",
                "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
                "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
                "function name() view returns (string)",
                "function symbol() view returns (string)",
                "function totalSupply() view returns (uint256)",
                "function transfer(address to, uint256 amount) returns (bool)",
                "function transferFrom(address from, address to, uint256 amount) returns (bool)",
            ],
        },
        LaunchpadTest: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x358a21B271639122f2912Bd9c4a00576Ea3d5186",
            abi: ["function mint(address targetLaunchpadNFT, address to, uint256 size)"],
        },
        MockTPO: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xfAE5FffcCB4c3e1d1c6178DC74c45E47952b080B",
            abi: ["function getERC20TokenUSDPrice(address tokenAddr) pure returns (uint256)"],
        },
        DIStepIncreaseSales: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x0122A207f21c6C6971b5C7273c8d1dF33595651c",
            abi: [],
        },
        DIStepIncreaseSalesGrade: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xc4b35c32CC3BdFD10D2C6E72B05bEC8a8c19d91B",
            abi: [],
        },
        DICloudSales: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x1b763103565140442CDb11dC392f184a44F5829d",
            abi: [],
        },
        TransferHelper: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x463E1037f61edC4235e52Cc36bFEdFF9fF4ceb5c",
            abi: [],
        },
        DIArrayHelper: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xf3EEB7cf1080810331EdA7Eb8d68eFCEEF7435D8",
            abi: [],
        },
        DIFansNFT: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xAE84cA8AB3A860f2C7eB76bD364c1CAE00b6e501",
            abi: [
                "constructor(string name, string symbol, string baseTokenURI)",
                "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                "event DIFansAddMaxSP(uint256 indexed tokenId, uint64 maxSP, uint64 maxSPAdd)",
                "event DIFansAddSp(uint256 indexed tokenId, uint64 sp, uint64 spAdd)",
                "event DIFansAppendReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                "event DIFansModGrade(uint256 indexed tokenId, uint8 grade)",
                "event DIFansModMaxSP(uint256 indexed tokenId, uint64 maxSP)",
                "event DIFansModReserve(uint256 indexed tokenId, uint208 reserve)",
                "event DIFansModReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                "event DIFansModSp(uint256 indexed tokenId, uint64 sp)",
                "event DIFansNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                "event Unpaused(address account)",
                "function DATA_ROLE() view returns (bytes32)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                "function FREEZE_ROLE() view returns (bytes32)",
                "function MINTER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function _royalties() view returns (uint256)",
                "function addMaxSP(uint256 tokenId, uint64 maxSPAdd, uint64 maxSPLimit)",
                "function addSp(uint256 tokenId, uint64 spAdd)",
                "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                "function appendReserve1(uint256 tokenId, uint32 reserve) returns (uint32 index)",
                "function approve(address to, uint256 tokenId)",
                "function balanceOf(address owner) view returns (uint256)",
                "function burn(uint256 tokenId)",
                "function exists(uint256 tokenId) view returns (bool)",
                "function extendNftData(string extendName)",
                "function fetchIncome(address erc20)",
                "function freeze(uint256 tokenId)",
                "function getApproved(uint256 tokenId) view returns (address)",
                "function getNftData(uint256 tokenId) view returns (tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function isApprovedForAll(address owner, address operator) view returns (bool)",
                "function isFreezed(uint256 tokenId) view returns (bool)",
                "function mint(address to, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data) returns (uint256)",
                "function modGrade(uint256 tokenId, uint8 grade)",
                "function modMaxSP(uint256 tokenId, uint64 maxSP)",
                "function modReserve(uint256 tokenId, uint208 reserve)",
                "function modReserve1(uint256 tokenId, uint32 index, uint32 reserve)",
                "function modSp(uint256 tokenId, uint64 sp)",
                "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                "function name() view returns (string)",
                "function notFreezed(uint256 tokenId) view returns (bool)",
                "function ownerOf(uint256 tokenId) view returns (address)",
                "function pause()",
                "function paused() view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                "function safeTransferFrom(address from, address to, uint256 tokenId)",
                "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                "function setApprovalForAll(address operator, bool approved)",
                "function setRoyalties(uint256 royalties)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function symbol() view returns (string)",
                "function tokenByIndex(uint256 index) view returns (uint256)",
                "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                "function tokenURI(uint256 tokenId) view returns (string)",
                "function totalSupply() view returns (uint256)",
                "function transferFrom(address from, address to, uint256 tokenId)",
                "function unfreeze(uint256 tokenId)",
                "function unpause()",
                "function updateURI(string baseTokenURI)",
            ],
        },
        DIFansCreator_V4: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xC98C5cFD95bd402e000beD52e947f3AEB788043e",
            abi: [
                "constructor() payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event FansGenesisPhaseStarted(uint32 indexed starRole)",
                "event FansNormalPhaseStarted(uint32 indexed starRole)",
                "event GenesisFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                "event Initialized(uint8 version)",
                "event NormalFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event SuperFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                "event Unpaused(address account)",
                "event Upgraded(address indexed implementation)",
                "function CREATOR_ROLE() view returns (bytes32)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function _fansCreateInfo(uint32) view returns (uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated)",
                "function _fansNFT() view returns (address)",
                "function _genesisFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                "function _maxGenesisNFTCount() view returns (uint32)",
                "function _maxSuperFanNFTCount() view returns (uint32)",
                "function _minGenesisNFTCount() view returns (uint32)",
                "function _normalFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                "function _starFactory() view returns (address)",
                "function _starPool() view returns (address)",
                "function _superFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                "function convertGenesisFan(uint32 starRole, uint8 grade, string tokenName, uint256 usdValue) payable returns (uint256 fanNFTId)",
                "function convertNormalFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                "function convertSuperFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                "function getFansCreateInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                "function getFansCreatedInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                "function getGenesisSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                "function getNormalSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getSuperSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function initialize()",
                "function launchGenesisFansConvert(uint32 starRole)",
                "function pause()",
                "function paused() view returns (bool)",
                "function removeChargeToken(string tokenName)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setDIFansNftAddress(address fansNFT)",
                "function setDIStarPoolAddress(address pool)",
                "function setGenesisFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                "function setGenesisNFTCount(uint32 maxCount, uint32 minCount)",
                "function setInitMaxSP(uint8 fanType, uint8 grade, uint64 maxSP)",
                "function setInitSP(uint8 fanType, uint8 grade, uint64 SP)",
                "function setMaxSuperFanNFTCount(uint32 count)",
                "function setNormalFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                "function setReceiveIncomeAddr(address incomeAddr)",
                "function setStarFactoryAddress(address starFactory)",
                "function setSuperFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                "function setTPOracleAddr(address tpOracleAddr)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function unpause()",
            ],
        },
        DIFansCreatorProxy: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x1A97589dd51cDb1CccE3c7563b2dff2C3368B500",
            abi: [
                "constructor(address _impl) payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event Upgraded(address indexed implementation)",
                "function changeAdmin(address newAdmin)",
                "function getAdmin() view returns (address)",
                "function upgradeTo(address _impl)",
            ],
        },
        DITokens1155: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x32488ec6Cd397A0A81ebbD3D6950Fe0355437FB1",
            abi: [
                "constructor(string uri)",
                "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                "event URI(string value, uint256 indexed id)",
                "event Unpaused(address account)",
                "function DATA_ROLE() view returns (bytes32)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function DREAM_COIN_ID() view returns (uint256)",
                "function DREAM_POINT_ID() view returns (uint256)",
                "function MINTER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function _royalties() view returns (uint256)",
                "function balanceOf(address account, uint256 id) view returns (uint256)",
                "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                "function burn(address account, uint256 id, uint256 value)",
                "function burnBatch(address account, uint256[] ids, uint256[] values)",
                "function exists(uint256 id) view returns (bool)",
                "function fetchIncome(address erc20)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function isApprovedForAll(address account, address operator) view returns (bool)",
                "function mint(address to, uint256 id, uint256 amount, bytes data)",
                "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                "function modifyExtendData(uint256 id, bytes extendData)",
                "function name() view returns (string)",
                "function pause()",
                "function paused() view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                "function setApprovalForAll(address operator, bool approved)",
                "function setRoyalties(uint256 royalties)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function symbol() view returns (string)",
                "function totalSupply(uint256 id) view returns (uint256)",
                "function unpause()",
                "function updateURI(string newuri)",
                "function uri(uint256) view returns (string)",
            ],
        },
        DIStarFactory_V3: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x5143B6244f7e21A2cc819a298194339ef3260F3E",
            abi: [
                "constructor()",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event DIStarCreated(uint32 indexed starRole, address indexed addr)",
                "event Initialized(uint8 version)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event Unpaused(address account)",
                "event Upgraded(address indexed implementation)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function STAR_ROLE() view returns (bytes32)",
                "function _addressToStarId(address) view returns (uint32)",
                "function _currDIStarImpl() view returns (address)",
                "function _fansNFT() view returns (address)",
                "function _starContracts(uint32) view returns (address)",
                "function _starPool() view returns (address)",
                "function _starStore1155() view returns (address)",
                "function _starStoreNft() view returns (address)",
                "function _starsCreated(uint256) view returns (uint32)",
                "function callDIStar(uint32 starRole, bytes callData) returns (bytes retrundata)",
                "function createDIStar(uint32 starRole) returns (address starConAddr)",
                "function getConfigAddress() view returns (address)",
                "function getDIStarAddress(uint32 starRole) view returns (address)",
                "function getDIStarByIndex(uint32 index) view returns (uint32 starRole)",
                "function getDIStarIdByContractAddress(address addr) view returns (uint32)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getTotalStars() view returns (uint32 starCount)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function initialize()",
                "function pause()",
                "function paused() view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setConfigAddress(address configaddr)",
                "function setDIFansNftAddress(address fansNFT)",
                "function setDIStarAssetStore(address store1155, address storenft)",
                "function setDIStarPoolAddress(address pool)",
                "function setTPOAddress(address tpo, address receiveAddr)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function unpause()",
                "function upgradeDIStarImpl(address newImplAddr)",
            ],
        },
        DIStarFactoryProxy: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xa54f30630bCf23481f182f4273A9E4857c94A1b8",
            abi: [
                "constructor(address _impl) payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event Upgraded(address indexed implementation)",
                "function changeAdmin(address newAdmin)",
                "function getAdmin() view returns (address)",
                "function upgradeTo(address _impl)",
            ],
        },
        DIStarPool_V3: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xdCB021f8b6e9FC8D51EE00d611598959A7248189",
            abi: [
                "constructor()",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event DispatchStarPool1155(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                "event DispatchStarPool20(address indexed tokenAddr, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                "event FansNFT1155RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, uint256 indexed tokenId, address usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                "event FansNFT20RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, address indexed usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                "event FillStarPool20(address indexed tokenAddr, uint256 value, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                "event Income1155Burned(address indexed tokenAddr, uint256 tokenId, uint256 burned, uint256 totalIncome)",
                "event Income20Burned(address indexed tokenAddr, uint256 burned, uint256 totalIncome)",
                "event Initialized(uint8 version)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event Share1155Income(address indexed tokenAddr, uint256 indexed tokenId, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                "event Share20Income(address indexed tokenAddr, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                "event Team1155RevenueFetched(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                "event Team20RevenueFetched(address indexed tokenAddr, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                "event Unpaused(address account)",
                "event Upgraded(address indexed implementation)",
                "event UserDITokenAdded(address indexed userAddr, uint256 indexed tokenId, uint256 addValue)",
                "event UserDITokenFetched(address indexed userAddr, uint256 indexed tokenId, uint256 value)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function DREAM_COIN_MINTER_ROLE() view returns (bytes32)",
                "function DREAM_POINT_MINTER_ROLE() view returns (bytes32)",
                "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                "function INCOME_CONVERT_FANSNFT() view returns (bytes32)",
                "function INCOME_STARASSET_CLOUDSALE() view returns (bytes32)",
                "function INCOME_STARASSET_SELL() view returns (bytes32)",
                "function INCOME_STAR_SUPPORT() view returns (bytes32)",
                "function INCOME_STAR_SUPPORT_1155() view returns (bytes32)",
                "function INCOME_STAR_SUPPORT_20() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function STAR_ROLE() view returns (bytes32)",
                "function _fansCreator() view returns (address)",
                "function _fansNFT() view returns (address)",
                "function _fansNFT1155Revenue(uint64, address, uint256) view returns (uint256)",
                "function _fansNFT20Revenue(uint64, address) view returns (uint256)",
                "function _income1155Status(address, uint256) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                "function _income20Status(address) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                "function _incomeShareConf(bytes32) view returns (uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates)",
                "function _star1155Pools(uint32, address, uint256) view returns (uint256)",
                "function _star20Pools(uint32, address) view returns (uint256)",
                "function _starFactory() view returns (address)",
                "function _token1155() view returns (address)",
                "function _userDITokens(address, uint256) view returns (uint256)",
                "function burn1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value)",
                "function burn20Token(address tokenAddr, address fromAddr, uint256 amount)",
                "function burn721Token(address tokenAddr, address fromAddr, uint256 tokenId)",
                "function burnPool1155(address tokenAddr, uint256 tokenId)",
                "function burnPool20(address tokenAddr)",
                "function charge1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value, bytes data)",
                "function charge20Token(address tokenAddr, address fromAddr, uint256 value)",
                "function charge721Token(address tokenAddr, address fromAddr, address toAddr, uint256 tokenId, bytes data)",
                "function dispatchStarPool1155(address tokenAddr, uint256 tokenId, uint256 value, address toAddr, uint32 starRole)",
                "function dispatchStarPool20(address tokenAddr, uint256 value, address toAddr, uint32 starRole)",
                "function fetchDITokens(uint256 tokenId) returns (uint256 value)",
                "function fetchFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId)",
                "function fetchFansNFT20Revenue(uint64 fansNFTId, address tokenAddr)",
                "function fetchIncome(address tokenAddr, uint256 value, address toAddr)",
                "function fetchTeam1155Revenue(address tokenAddr, uint256 tokenId, uint256 value, address toAddr)",
                "function fetchTeam20Revenue(address tokenAddr, uint256 value, address toAddr)",
                "function fillStarPool20(address tokenAddr, uint256 value, uint32 starRole)",
                "function getDITokenAmount(address userAddr, uint256 tokenId) view returns (uint256 value)",
                "function getFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId) view returns (uint256 value)",
                "function getFansNFT20Revenue(uint64 fansNFTId, address tokenAddr) view returns (uint256 value)",
                "function getIncome1155Status(address tokenAddr, uint256 tokenId) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                "function getIncome20Status(address tokenAddr) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function giveDreamCoins(address toUserAddr, uint256 value)",
                "function giveDreamPoints(address toUserAddr, uint256 value)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function initialize()",
                "function mintDreamCoins(address toUserAddr, uint256 value, bytes data)",
                "function mintDreamPoints(address toUserAddr, uint256 value, bytes data)",
                "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) pure returns (bytes4)",
                "function onERC1155Received(address operator, address from, uint256 tokenId, uint256 value, bytes data) pure returns (bytes4)",
                "function onERC721Received(address operator, address from, uint256 tokenId, bytes data) pure returns (bytes4)",
                "function onShare1155Income(bytes32 incomeType, address tokenAddr, uint256 tokenId, uint64 fansNFTId, uint256 value)",
                "function onShare20Income(bytes32 incomeType, address tokenAddr, uint64 fansNFTId, uint256 value)",
                "function pause()",
                "function paused() view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setDIFansCreatorAddress(address addr)",
                "function setDIFansNftAddress(address fansNFT)",
                "function setDIStarFactoryAddress(address addr)",
                "function setDITokens1155Address(address token1155)",
                "function setIncomeShare(bytes32 incomeType, tuple(uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates) conf)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function unpause()",
            ],
        },
        DIStarPoolProxy: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x38D5d652f91fC382B1079e8c67894A887ae27dD5",
            abi: [
                "constructor(address _impl) payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event Upgraded(address indexed implementation)",
                "function changeAdmin(address newAdmin)",
                "function getAdmin() view returns (address)",
                "function upgradeTo(address _impl)",
            ],
        },
        DIStar_V2: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x9F4C215077adAD7715BCF19cC882FdFc827fC87D",
            abi: [
                "constructor() payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event DaylyCheckin(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) checkInConf, uint256 lastCheckinBlock, uint32 traineeId)",
                "event DaylyPopSupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastPopSupportBlock)",
                "event DaylySupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastSupportBlock, uint32 traineeId)",
                "event FansNFTBinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                "event FansNFTUnbinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                "event Initialized(uint8 version)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event StarPopularityAdded(uint32 indexed starRole, uint64 pop, uint64 popAdded)",
                "event StarReputationAdded(uint32 indexed starRole, uint64 rep, uint64 repAdded)",
                "event StarRoomItemActivated(uint32 indexed starRole, tuple(uint32 roomItemId, uint32 roomItemType) item)",
                "event StarSkillAdded(uint32 indexed starRole, uint64 skill, uint64 skillAdded)",
                "event StarUpgraded(uint32 indexed starRole, uint8 newLevel, address indexed opAddr)",
                "event Unpaused(address account)",
                "event Upgraded(address indexed implementation)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function STAR_ROLE() view returns (bytes32)",
                "function _fansNFT() view returns (address)",
                "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                "function _starFactory() view returns (address)",
                "function _starInfos() view returns (uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill)",
                "function _starPool() view returns (address)",
                "function _starRole() view returns (uint32)",
                "function _starRoomItems(uint256) view returns (uint32 roomItemId, uint32 roomItemType)",
                "function _starStore1155() view returns (address)",
                "function _starStoreNft() view returns (address)",
                "function _token1155() view returns (address)",
                "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                "function addFansMaxSP(uint256 fansNFTId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) fansNftData, uint64 maxSpAdd)",
                "function bindFansNFT(uint256 tokenId)",
                "function daylyCheckin(uint32 checkinType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                "function daylyPopSupport(uint32 supportType)",
                "function daylySupport(uint32 supportType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                "function getFansNFTByUser(address userAddr) view returns (uint64 tokenId)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getStarInfo() view returns (tuple(uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill) info)",
                "function getUserByFansNFT(uint64 tokenId) view returns (address userAddr)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function getfansNFTOpData_lastCheckinBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                "function getfansNFTOpData_lastPopSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                "function getfansNFTOpData_lastSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function initialize()",
                "function onGenesisFanCreated(uint256 tokenId, address userAddr)",
                "function onGenesisSuccess(uint32 starRole)",
                "function onNormalFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                "function onStarRoomItemActivate(tuple(uint32 roomItemId, uint32 roomItemType) item)",
                "function onSuperFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                "function pause()",
                "function paused() view returns (bool)",
                "function removeChargeToken(string tokenName)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setDIFansNftAddress(address fansNFT)",
                "function setDIStarAssetStore(address store1155, address storenft)",
                "function setDIStarPoolAddress(address pool)",
                "function setDITokens1155Address(address token1155)",
                "function setIDIStarFactory_Config(address f)",
                "function setReceiveIncomeAddr(address incomeAddr)",
                "function setTPOracleAddr(address tpOracleAddr)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function unbindFansNFT(uint256 tokenId)",
                "function unpause()",
                "function upgradeStar()",
            ],
        },
        DIStarAssetStore1155: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x7eAa572da342B1F19823a7b4091311ee43B47359",
            abi: [
                "constructor()",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event BuyStarAsset1155(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 token1155Id, uint256 amount, address indexed tokenAddr, uint256 value)",
                "event Initialized(uint8 version)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event Star1155ModOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "event Star1155PutOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "event StarAsset1155FundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                "event StarAsset1155FundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                "event Unpaused(address account)",
                "event Upgraded(address indexed implementation)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function STAR_ROLE() view returns (bytes32)",
                "function _fansNFT() view returns (address)",
                "function _levelUnlockGeneral1155Confs(uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                "function _levelUnlockStarSpecial1155Confs(uint32, uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                "function _star1155() view returns (address)",
                "function _starFactory() view returns (address)",
                "function _starNft() view returns (address)",
                "function _starPool() view returns (address)",
                "function buyStarAsset1155(uint32 role, uint32 sellId, uint256 amount, uint256 highiestPrice)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getStar1155CloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                "function getStar1155OnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                "function getStar1155SellIdSeed(uint32 role) view returns (uint32 idSeed)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function initialize()",
                "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                "function modOnSaleStar1155(uint32 role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "function pause()",
                "function paused() view returns (bool)",
                "function putOnSale1155(uint32 role, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setGeneralStar1155ConfigByLevel(uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                "function setSpecialStar1155ConfigByRoleLevel(uint32 role, uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                "function starAsset1155RaiseFund(uint32 role, uint32 sellId, uint256 value)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function unlockStarLevelAssets(uint32 role, uint8 level)",
                "function unpause()",
            ],
        },
        DIStarAssetStore1155Proxy: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x1D4576f58E413a766679751d538BE5d7c6afAb0d",
            abi: [
                "constructor(address _impl) payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event Upgraded(address indexed implementation)",
                "function changeAdmin(address newAdmin)",
                "function getAdmin() view returns (address)",
                "function upgradeTo(address _impl)",
            ],
        },
        DIStarAssetStoreNFT: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x6ce0044892E5dc0ea0A98a049Efea6D2FBB19879",
            abi: [
                "constructor()",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event BuyStarAssetNFT(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 nftId, address indexed tokenAddr, uint256 value)",
                "event Initialized(uint8 version)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event StarAssetNftFundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                "event StarAssetNftFundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                "event StarNftModOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "event StarNftPutOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "event Unpaused(address account)",
                "event Upgraded(address indexed implementation)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function STAR_ROLE() view returns (bytes32)",
                "function _fansNFT() view returns (address)",
                "function _levelUnlockGeneralNftConfs(uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                "function _levelUnlockStarSpecialNftConfs(uint32, uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                "function _star1155() view returns (address)",
                "function _starFactory() view returns (address)",
                "function _starNft() view returns (address)",
                "function _starPool() view returns (address)",
                "function buyStarAssetNft(uint32 role, uint32 sellId, uint256 highiestPrice)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getStarNftCloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                "function getStarNftOnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                "function getStarNftSellIdSeed(uint32 role) view returns (uint32 idSeed)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function initialize()",
                "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                "function modOnSaleStarNft(uint32 role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "function pause()",
                "function paused() view returns (bool)",
                "function putOnSaleNft(uint32 role, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setGeneralStarNftConfigByLevel(uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                "function setSpecialStarNftConfigByRoleLevel(uint32 role, uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                "function starAssetNftRaiseFund(uint32 role, uint32 sellId, uint256 value)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function unlockStarLevelAssets(uint32 role, uint8 level)",
                "function unpause()",
            ],
        },
        DIStarAssetStoreNFTProxy: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x291FC9395f35d55ae270d59DFDcBbD31E5e0c879",
            abi: [
                "constructor(address _impl) payable",
                "event AdminChanged(address previousAdmin, address newAdmin)",
                "event BeaconUpgraded(address indexed beacon)",
                "event Upgraded(address indexed implementation)",
                "function changeAdmin(address newAdmin)",
                "function getAdmin() view returns (address)",
                "function upgradeTo(address _impl)",
            ],
        },
        DIStar1155: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x0b324D2ED10d3047E5ffbd639bD5F821D6f13AB0",
            abi: [
                "constructor(string uri)",
                "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                "event DIStar1155Modified(uint256 indexed tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                "event URI(string value, uint256 indexed id)",
                "event Unpaused(address account)",
                "function DATA_ROLE() view returns (bytes32)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function MINTER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function _codec() view returns (address)",
                "function _royalties() view returns (uint256)",
                "function balanceOf(address account, uint256 id) view returns (uint256)",
                "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                "function burn(address account, uint256 id, uint256 value)",
                "function burnBatch(address account, uint256[] ids, uint256[] values)",
                "function exists(uint256 id) view returns (bool)",
                "function fetchIncome(address erc20)",
                "function getCodec() view returns (address c)",
                "function getNftData(uint256 tokenId) view returns (uint256 nftId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function isApprovedForAll(address account, address operator) view returns (bool)",
                "function mint(address to, uint256 id, uint256 amount, bytes data)",
                "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                "function modNftData(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                "function modifyExtendData(uint256 id, bytes extendData)",
                "function name() view returns (string)",
                "function pause()",
                "function paused() view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                "function setApprovalForAll(address operator, bool approved)",
                "function setCodec(address c)",
                "function setRoyalties(uint256 royalties)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function symbol() view returns (string)",
                "function totalSupply(uint256 id) view returns (uint256)",
                "function unpause()",
                "function updateURI(string newuri)",
                "function uri(uint256) view returns (string)",
            ],
        },
        DIStarNFT: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0x8634B306731646FD52aa6B61f795E94483DB8650",
            abi: [
                "constructor(string name, string symbol, string baseTokenURI)",
                "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                "event DIStarNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                "event DIStarNFTModified(uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                "event Paused(address account)",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                "event Unpaused(address account)",
                "function DATA_ROLE() view returns (bytes32)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                "function FREEZE_ROLE() view returns (bytes32)",
                "function MINTER_ROLE() view returns (bytes32)",
                "function PAUSER_ROLE() view returns (bytes32)",
                "function _codec() view returns (address)",
                "function _royalties() view returns (uint256)",
                "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                "function approve(address to, uint256 tokenId)",
                "function balanceOf(address owner) view returns (uint256)",
                "function burn(uint256 tokenId)",
                "function exists(uint256 tokenId) view returns (bool)",
                "function extendNftData(string extendName)",
                "function fetchIncome(address erc20)",
                "function freeze(uint256 tokenId)",
                "function getApproved(uint256 tokenId) view returns (address)",
                "function getCodec() view returns (address c)",
                "function getNftData(uint256 tokenId) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                "function getVersion() pure returns (string)",
                "function getVersionTag() pure returns (string)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function isApprovedForAll(address owner, address operator) view returns (bool)",
                "function isFreezed(uint256 tokenId) view returns (bool)",
                "function mint(address to, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) returns (uint256)",
                "function modNftData(uint256 tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                "function name() view returns (string)",
                "function notFreezed(uint256 tokenId) view returns (bool)",
                "function ownerOf(uint256 tokenId) view returns (address)",
                "function pause()",
                "function paused() view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                "function safeTransferFrom(address from, address to, uint256 tokenId)",
                "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                "function setApprovalForAll(address operator, bool approved)",
                "function setCodec(address c)",
                "function setRoyalties(uint256 royalties)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function symbol() view returns (string)",
                "function tokenByIndex(uint256 index) view returns (uint256)",
                "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                "function tokenURI(uint256 tokenId) view returns (string)",
                "function totalSupply() view returns (uint256)",
                "function transferFrom(address from, address to, uint256 tokenId)",
                "function unfreeze(uint256 tokenId)",
                "function unpause()",
                "function updateURI(string baseTokenURI)",
            ],
        },
        DIStar1155Codec: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xFD8Ba2Fe3A325034f3a4bAcB25799fe7791AC8E8",
            abi: [
                "function fromCharacterItemData(tuple(uint8 citp, uint64 add) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                "function fromExpeditionItemData(tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                "function fromMysteryBoxData(tuple(uint32 randomType, uint32 mysteryType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                "function fromRoomItemData(tuple(uint32 roomItemId, uint32 roomItemType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                "function getCharacterItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint8 citp, uint64 add) ed)",
                "function getDIStarAttrByID(uint256 id) pure returns (tuple(uint32 role, uint16 tp, uint32 id) attr)",
                "function getExpeditionData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) ed)",
                "function getIDFromRoleAndAttribue(uint32 role, uint256 attr) pure returns (uint256 id)",
                "function getMysteryBoxData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 randomType, uint32 mysteryType) rd)",
                "function getRoomItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 roomItemId, uint32 roomItemType) rd)",
                "function getTpFromID(uint256 id) pure returns (uint16 tp)",
                "function setDIStarAttrToID(tuple(uint32 role, uint16 tp, uint32 id) attr) pure returns (uint256 id)",
            ],
        },
        DIStarNFTCodec_V2: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xDCA9B38EB86A5a7B981dD9c9Da83EF8A1292f0E4",
            abi: [
                "function fromCharacterData(tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                "function fromContentData(tuple(uint16 mediaType, uint32 contentID) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                "function getCharacterData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) cd)",
                "function getContentData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint16 mediaType, uint32 contentID) c)",
            ],
        },
        DIStarFactory_V3_Config: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xF6f628a490c12C852ae0992A476D6a38209AA680",
            abi: [
                "constructor()",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function _BABCheckin(uint32) view returns (bool)",
                "function _BABSupports(uint32) view returns (bool)",
                "function _checkinConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval)",
                "function _fanTypeMaxSPFactor(uint8) view returns (uint32)",
                "function _gradeMaxSPFactor(uint8) view returns (uint32)",
                "function _isbt721() view returns (address)",
                "function _popSupportConfigs(uint8, uint32) view returns (uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                "function _starConfig() view returns (uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop)",
                "function _starInitAsset1155Confs(uint32, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                "function _starInitAssetNftConfs(uint32, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                "function _starLevelConfigs(uint8) view returns (uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd)",
                "function _supportConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                "function getCheckinConfigByLevel(uint8 starLevel, uint32 checkinType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                "function getDIStarConfig() view returns (tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                "function getDIStarInitAsset1155Configs(uint32 starRole) view returns (tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                "function getDIStarInitAssetNftConfigs(uint32 starRole) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                "function getMaxSPFactorByFanType(uint8 fanType) view returns (uint32 factor)",
                "function getMaxSPFactorByGrade(uint8 grade) view returns (uint32 factor)",
                "function getMaxSPLimitByStarLevel(uint8 starLevel) view returns (uint64 maxSPLimit)",
                "function getPopSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function getStarLevelConfigByLevel(uint8 starLevel) view returns (tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                "function getSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setCheckinConfig(uint8 starLevel, uint32 checkinType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                "function setDIStarInitAsset1155Configs(uint32 starRole, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                "function setDIStarInitAssetNftConfigs(uint32 starRole, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                "function setDIStarsConfig(tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                "function setISBT721Address(address isbt721)",
                "function setMaxSPFactorByFanType(uint8 fanType, uint32 factor)",
                "function setMaxSPFactorByGrade(uint8 grade, uint32 factor)",
                "function setPopSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                "function setStarLevelConfig(uint8 starLevel, tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                "function setSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
            ],
        },
        TokenPrices: {
            deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
            addr: "0xe20CDb5bfa999e08E9E6c5739583634Aff18E971",
            abi: [
                "constructor()",
                "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                "function DefiPoolType_UniswapV2() view returns (uint8)",
                "function DefiPoolType_UniswapV3() view returns (uint8)",
                "function MANAGER_ROLE() view returns (bytes32)",
                "function _chainLinkFeeds(address) view returns (address)",
                "function _defiPools(address) view returns (uint8 poolType, uint8 tokenIndex, address poolAddr)",
                "function _univ3_getTokenPrice_0(address pairAddress, uint256 amount) view returns (uint256)",
                "function _univ3_getTokenPrice_1(address pairAddress, uint256 amount) view returns (uint256)",
                "function getERC20TokenUSDPrice(address tokenAddr) view returns (uint256)",
                "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                "function grantRole(bytes32 role, address account)",
                "function hasRole(bytes32 role, address account) view returns (bool)",
                "function renounceRole(bytes32 role, address account)",
                "function revokeRole(bytes32 role, address account)",
                "function setChainLinkTokenPriceSource(address tokenAddr, address feedAddr)",
                "function setDefiPoolSource(address tokenAddr, tuple(uint8 poolType, uint8 tokenIndex, address poolAddr) defiPoolSource)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
            ],
        },
    },
};

// test
if (VERSION === "test") {
    contract_config = {
        chainId: "421613",
        chainName: "Arbitrum Goerli",
        nativeCurrency: {
            name: "AGOR",
            symbol: "AGOR",
            decimals: 18,
        },
        rpcUrls: ["https://goerli-rollup.arbitrum.io/rpc"],
        blockExplorerUrls: ["https://goerli.arbiscan.io"],
        txUrlPrefix: "https://goerli.arbiscan.io/tx/",
        charge: {
            addr: {
                mintfee: "0x9812752121fb9eBEc49A4B8153240866156E87C5",
                unbindfee: "0x9812752121fb9eBEc49A4B8153240866156E87C5",
                goldcharge: "0x9812752121fb9eBEc49A4B8153240866156E87C5",
            },
            fee: {},
        },
        oracle_rand_extra_fee: "1300000000000000",
        batch10_oracle_rand_extra_fee: "6500000000000000",
        expedition_tms_per_block: 12,
    };

    contract_abi = {
        contracts: {
            MockERC20: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x9972B8153DF648C94C8074d10F75CdA6ac2CE867",
                abi: [
                    "constructor()",
                    "event Approval(address indexed owner, address indexed spender, uint256 value)",
                    "event Transfer(address indexed from, address indexed to, uint256 value)",
                    "function allowance(address owner, address spender) view returns (uint256)",
                    "function approve(address spender, uint256 amount) returns (bool)",
                    "function balanceOf(address account) view returns (uint256)",
                    "function burn(uint256 amount)",
                    "function burnFrom(address account, uint256 amount)",
                    "function decimals() view returns (uint8)",
                    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
                    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
                    "function name() view returns (string)",
                    "function symbol() view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transfer(address to, uint256 amount) returns (bool)",
                    "function transferFrom(address from, address to, uint256 amount) returns (bool)",
                ],
            },
            LaunchpadTest: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x1A84E6D95d04b2A87d587d0aAff925Ff3f9FFc08",
                abi: ["function mint(address targetLaunchpadNFT, address to, uint256 size)"],
            },
            MockTPO: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x2D35642Eef2Fda5052CF74cDCb3665494a292B67",
                abi: ["function getERC20TokenUSDPrice(address tokenAddr) pure returns (uint256)"],
            },
            DIStepIncreaseSales: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x969A51620c89bE81122129d342Ae854B1C853dCb",
                abi: [],
            },
            DIStepIncreaseSalesGrade: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xD452a4918A13EE740187Cf5B5dc6015554B71F4A",
                abi: [],
            },
            DICloudSales: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xB31525b8B7cE508014BFCBF5d4146144157FE320",
                abi: [],
            },
            TransferHelper: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xb4b510E22545Ac0A0995E25346E39244fD82CB78",
                abi: [],
            },
            DIArrayHelper: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xE818E2643776497C127B9319dc313F056023375A",
                abi: [],
            },
            DIFansNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x2291Fc1C953693F06a2f759A808fF365576DB6A0",
                abi: [
                    "constructor(string name, string symbol, string baseTokenURI)",
                    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                    "event DIFansAddMaxSP(uint256 indexed tokenId, uint64 maxSP, uint64 maxSPAdd)",
                    "event DIFansAddSp(uint256 indexed tokenId, uint64 sp, uint64 spAdd)",
                    "event DIFansAppendReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                    "event DIFansModGrade(uint256 indexed tokenId, uint8 grade)",
                    "event DIFansModMaxSP(uint256 indexed tokenId, uint64 maxSP)",
                    "event DIFansModReserve(uint256 indexed tokenId, uint208 reserve)",
                    "event DIFansModReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                    "event DIFansModSp(uint256 indexed tokenId, uint64 sp)",
                    "event DIFansNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                    "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                    "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                    "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function FREEZE_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _royalties() view returns (uint256)",
                    "function addMaxSP(uint256 tokenId, uint64 maxSPAdd, uint64 maxSPLimit)",
                    "function addSp(uint256 tokenId, uint64 spAdd)",
                    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function appendReserve1(uint256 tokenId, uint32 reserve) returns (uint32 index)",
                    "function approve(address to, uint256 tokenId)",
                    "function balanceOf(address owner) view returns (uint256)",
                    "function burn(uint256 tokenId)",
                    "function exists(uint256 tokenId) view returns (bool)",
                    "function extendNftData(string extendName)",
                    "function fetchIncome(address erc20)",
                    "function freeze(uint256 tokenId)",
                    "function getApproved(uint256 tokenId) view returns (address)",
                    "function getNftData(uint256 tokenId) view returns (tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address owner, address operator) view returns (bool)",
                    "function isFreezed(uint256 tokenId) view returns (bool)",
                    "function mint(address to, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data) returns (uint256)",
                    "function modGrade(uint256 tokenId, uint8 grade)",
                    "function modMaxSP(uint256 tokenId, uint64 maxSP)",
                    "function modReserve(uint256 tokenId, uint208 reserve)",
                    "function modReserve1(uint256 tokenId, uint32 index, uint32 reserve)",
                    "function modSp(uint256 tokenId, uint64 sp)",
                    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function name() view returns (string)",
                    "function notFreezed(uint256 tokenId) view returns (bool)",
                    "function ownerOf(uint256 tokenId) view returns (address)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function tokenByIndex(uint256 index) view returns (uint256)",
                    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                    "function tokenURI(uint256 tokenId) view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transferFrom(address from, address to, uint256 tokenId)",
                    "function unfreeze(uint256 tokenId)",
                    "function unpause()",
                    "function updateURI(string baseTokenURI)",
                ],
            },
            DIFansCreator_V4: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x0370097be9D665B482643009365CbEAe5963D42f",
                abi: [
                    "constructor() payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event FansGenesisPhaseStarted(uint32 indexed starRole)",
                    "event FansNormalPhaseStarted(uint32 indexed starRole)",
                    "event GenesisFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Initialized(uint8 version)",
                    "event NormalFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event SuperFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function CREATOR_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _fansCreateInfo(uint32) view returns (uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated)",
                    "function _fansNFT() view returns (address)",
                    "function _genesisFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function _maxGenesisNFTCount() view returns (uint32)",
                    "function _maxSuperFanNFTCount() view returns (uint32)",
                    "function _minGenesisNFTCount() view returns (uint32)",
                    "function _normalFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                    "function _starFactory() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function _superFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                    "function convertGenesisFan(uint32 starRole, uint8 grade, string tokenName, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function convertNormalFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function convertSuperFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function getFansCreateInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                    "function getFansCreatedInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                    "function getGenesisSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getNormalSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getSuperSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function launchGenesisFansConvert(uint32 starRole)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function removeChargeToken(string tokenName)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setGenesisFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setGenesisNFTCount(uint32 maxCount, uint32 minCount)",
                    "function setInitMaxSP(uint8 fanType, uint8 grade, uint64 maxSP)",
                    "function setInitSP(uint8 fanType, uint8 grade, uint64 SP)",
                    "function setMaxSuperFanNFTCount(uint32 count)",
                    "function setNormalFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setReceiveIncomeAddr(address incomeAddr)",
                    "function setStarFactoryAddress(address starFactory)",
                    "function setSuperFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setTPOracleAddr(address tpOracleAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                ],
            },
            DIFansCreatorProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x9355F21ddc0E9d932CA1cAB5e377c24D8260cCEe",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DITokens1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x52D9A178488631bB96c5da723675eD43168b5B65",
                abi: [
                    "constructor(string uri)",
                    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                    "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                    "event URI(string value, uint256 indexed id)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DREAM_COIN_ID() view returns (uint256)",
                    "function DREAM_POINT_ID() view returns (uint256)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _royalties() view returns (uint256)",
                    "function balanceOf(address account, uint256 id) view returns (uint256)",
                    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                    "function burn(address account, uint256 id, uint256 value)",
                    "function burnBatch(address account, uint256[] ids, uint256[] values)",
                    "function exists(uint256 id) view returns (bool)",
                    "function fetchIncome(address erc20)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address account, address operator) view returns (bool)",
                    "function mint(address to, uint256 id, uint256 amount, bytes data)",
                    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function modifyExtendData(uint256 id, bytes extendData)",
                    "function name() view returns (string)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function totalSupply(uint256 id) view returns (uint256)",
                    "function unpause()",
                    "function updateURI(string newuri)",
                    "function uri(uint256) view returns (string)",
                ],
            },
            DIStarFactory_V3: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x96cDDaDB0cFDFeB4352D4d466ca935737F3544C1",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DIStarCreated(uint32 indexed starRole, address indexed addr)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _addressToStarId(address) view returns (uint32)",
                    "function _currDIStarImpl() view returns (address)",
                    "function _fansNFT() view returns (address)",
                    "function _starContracts(uint32) view returns (address)",
                    "function _starPool() view returns (address)",
                    "function _starStore1155() view returns (address)",
                    "function _starStoreNft() view returns (address)",
                    "function _starsCreated(uint256) view returns (uint32)",
                    "function callDIStar(uint32 starRole, bytes callData) returns (bytes retrundata)",
                    "function createDIStar(uint32 starRole) returns (address starConAddr)",
                    "function getConfigAddress() view returns (address)",
                    "function getDIStarAddress(uint32 starRole) view returns (address)",
                    "function getDIStarByIndex(uint32 index) view returns (uint32 starRole)",
                    "function getDIStarIdByContractAddress(address addr) view returns (uint32)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTotalStars() view returns (uint32 starCount)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setConfigAddress(address configaddr)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarAssetStore(address store1155, address storenft)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setTPOAddress(address tpo, address receiveAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                    "function upgradeDIStarImpl(address newImplAddr)",
                ],
            },
            DIStarFactoryProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xe4F3023B1FB70fAD61662E6F82eCCd5b7B2a65A4",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStarPool_V3: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xBD54fcdD0b95caDB0CdCc5353a96D1Cfa3EB54C7",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DispatchStarPool1155(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event DispatchStarPool20(address indexed tokenAddr, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event FansNFT1155RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, uint256 indexed tokenId, address usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                    "event FansNFT20RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, address indexed usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                    "event FillStarPool20(address indexed tokenAddr, uint256 value, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event Income1155Burned(address indexed tokenAddr, uint256 tokenId, uint256 burned, uint256 totalIncome)",
                    "event Income20Burned(address indexed tokenAddr, uint256 burned, uint256 totalIncome)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Share1155Income(address indexed tokenAddr, uint256 indexed tokenId, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                    "event Share20Income(address indexed tokenAddr, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                    "event Team1155RevenueFetched(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                    "event Team20RevenueFetched(address indexed tokenAddr, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "event UserDITokenAdded(address indexed userAddr, uint256 indexed tokenId, uint256 addValue)",
                    "event UserDITokenFetched(address indexed userAddr, uint256 indexed tokenId, uint256 value)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DREAM_COIN_MINTER_ROLE() view returns (bytes32)",
                    "function DREAM_POINT_MINTER_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function INCOME_CONVERT_FANSNFT() view returns (bytes32)",
                    "function INCOME_STARASSET_CLOUDSALE() view returns (bytes32)",
                    "function INCOME_STARASSET_SELL() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT_1155() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT_20() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansCreator() view returns (address)",
                    "function _fansNFT() view returns (address)",
                    "function _fansNFT1155Revenue(uint64, address, uint256) view returns (uint256)",
                    "function _fansNFT20Revenue(uint64, address) view returns (uint256)",
                    "function _income1155Status(address, uint256) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                    "function _income20Status(address) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                    "function _incomeShareConf(bytes32) view returns (uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates)",
                    "function _star1155Pools(uint32, address, uint256) view returns (uint256)",
                    "function _star20Pools(uint32, address) view returns (uint256)",
                    "function _starFactory() view returns (address)",
                    "function _token1155() view returns (address)",
                    "function _userDITokens(address, uint256) view returns (uint256)",
                    "function burn1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value)",
                    "function burn20Token(address tokenAddr, address fromAddr, uint256 amount)",
                    "function burn721Token(address tokenAddr, address fromAddr, uint256 tokenId)",
                    "function burnPool1155(address tokenAddr, uint256 tokenId)",
                    "function burnPool20(address tokenAddr)",
                    "function charge1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value, bytes data)",
                    "function charge20Token(address tokenAddr, address fromAddr, uint256 value)",
                    "function charge721Token(address tokenAddr, address fromAddr, address toAddr, uint256 tokenId, bytes data)",
                    "function dispatchStarPool1155(address tokenAddr, uint256 tokenId, uint256 value, address toAddr, uint32 starRole)",
                    "function dispatchStarPool20(address tokenAddr, uint256 value, address toAddr, uint32 starRole)",
                    "function fetchDITokens(uint256 tokenId) returns (uint256 value)",
                    "function fetchFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId)",
                    "function fetchFansNFT20Revenue(uint64 fansNFTId, address tokenAddr)",
                    "function fetchIncome(address tokenAddr, uint256 value, address toAddr)",
                    "function fetchTeam1155Revenue(address tokenAddr, uint256 tokenId, uint256 value, address toAddr)",
                    "function fetchTeam20Revenue(address tokenAddr, uint256 value, address toAddr)",
                    "function fillStarPool20(address tokenAddr, uint256 value, uint32 starRole)",
                    "function getDITokenAmount(address userAddr, uint256 tokenId) view returns (uint256 value)",
                    "function getFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId) view returns (uint256 value)",
                    "function getFansNFT20Revenue(uint64 fansNFTId, address tokenAddr) view returns (uint256 value)",
                    "function getIncome1155Status(address tokenAddr, uint256 tokenId) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                    "function getIncome20Status(address tokenAddr) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function giveDreamCoins(address toUserAddr, uint256 value)",
                    "function giveDreamPoints(address toUserAddr, uint256 value)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function mintDreamCoins(address toUserAddr, uint256 value, bytes data)",
                    "function mintDreamPoints(address toUserAddr, uint256 value, bytes data)",
                    "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) pure returns (bytes4)",
                    "function onERC1155Received(address operator, address from, uint256 tokenId, uint256 value, bytes data) pure returns (bytes4)",
                    "function onERC721Received(address operator, address from, uint256 tokenId, bytes data) pure returns (bytes4)",
                    "function onShare1155Income(bytes32 incomeType, address tokenAddr, uint256 tokenId, uint64 fansNFTId, uint256 value)",
                    "function onShare20Income(bytes32 incomeType, address tokenAddr, uint64 fansNFTId, uint256 value)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansCreatorAddress(address addr)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarFactoryAddress(address addr)",
                    "function setDITokens1155Address(address token1155)",
                    "function setIncomeShare(bytes32 incomeType, tuple(uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates) conf)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                ],
            },
            DIStarPoolProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x1eF61168D59811d5c0f32100fcA568471EdBb017",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStar_V2: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x5FdADaF4b3aA49553bac0BfF2B870a7A1eE0228e",
                abi: [
                    "constructor() payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DaylyCheckin(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) checkInConf, uint256 lastCheckinBlock, uint32 traineeId)",
                    "event DaylyPopSupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastPopSupportBlock, uint32 traineeId)",
                    "event DaylySupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastSupportBlock, uint32 traineeId)",
                    "event FansNFTBinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                    "event FansNFTUnbinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event StarPopularityAdded(uint32 indexed starRole, uint64 pop, uint64 popAdded)",
                    "event StarReputationAdded(uint32 indexed starRole, uint64 rep, uint64 repAdded)",
                    "event StarRoomItemActivated(uint32 indexed starRole, tuple(uint32 roomItemId, uint32 roomItemType) item)",
                    "event StarSkillAdded(uint32 indexed starRole, uint64 skill, uint64 skillAdded)",
                    "event StarUpgraded(uint32 indexed starRole, uint8 newLevel, address indexed opAddr)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                    "function _starFactory() view returns (address)",
                    "function _starInfos() view returns (uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill)",
                    "function _starPool() view returns (address)",
                    "function _starRole() view returns (uint32)",
                    "function _starRoomItems(uint256) view returns (uint32 roomItemId, uint32 roomItemType)",
                    "function _starStore1155() view returns (address)",
                    "function _starStoreNft() view returns (address)",
                    "function _token1155() view returns (address)",
                    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                    "function addFansMaxSP(uint256 fansNFTId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) fansNftData, uint64 maxSpAdd)",
                    "function bindFansNFT(uint256 tokenId)",
                    "function daylyCheckin(uint32 checkinType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                    "function daylyPopSupport(uint32 supportType, uint32 traineeId)",
                    "function daylySupport(uint32 supportType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                    "function getFansNFTByUser(address userAddr) view returns (uint64 tokenId)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarInfo() view returns (tuple(uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill) info)",
                    "function getUserByFansNFT(uint64 tokenId) view returns (address userAddr)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function getfansNFTOpData_lastCheckinBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function getfansNFTOpData_lastPopSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function getfansNFTOpData_lastSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function onGenesisFanCreated(uint256 tokenId, address userAddr)",
                    "function onGenesisSuccess(uint32 starRole)",
                    "function onNormalFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                    "function onStarRoomItemActivate(tuple(uint32 roomItemId, uint32 roomItemType) item)",
                    "function onSuperFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function removeChargeToken(string tokenName)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarAssetStore(address store1155, address storenft)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setDITokens1155Address(address token1155)",
                    "function setIDIStarFactory_Config(address f)",
                    "function setReceiveIncomeAddr(address incomeAddr)",
                    "function setTPOracleAddr(address tpOracleAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unbindFansNFT(uint256 tokenId)",
                    "function unpause()",
                    "function upgradeStar()",
                ],
            },
            DIStarAssetStore1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xF9969a7c0b8c764b328b5DDC467Bb7432eDE1cD5",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event BuyStarAsset1155(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 token1155Id, uint256 amount, address indexed tokenAddr, uint256 value)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Star1155ModOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event Star1155PutOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event StarAsset1155FundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                    "event StarAsset1155FundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _levelUnlockGeneral1155Confs(uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _levelUnlockStarSpecial1155Confs(uint32, uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _star1155() view returns (address)",
                    "function _starFactory() view returns (address)",
                    "function _starNft() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function buyStarAsset1155(uint32 role, uint32 sellId, uint256 amount, uint256 highiestPrice)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStar1155CloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                    "function getStar1155OnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                    "function getStar1155SellIdSeed(uint32 role) view returns (uint32 idSeed)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                    "function modOnSaleStar1155(uint32 role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function putOnSale1155(uint32 role, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setGeneralStar1155ConfigByLevel(uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setSpecialStar1155ConfigByRoleLevel(uint32 role, uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function starAsset1155RaiseFund(uint32 role, uint32 sellId, uint256 value)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unlockStarLevelAssets(uint32 role, uint8 level)",
                    "function unpause()",
                ],
            },
            DIStarAssetStore1155Proxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x524F5B21B2BD25B79a77c3586e2D4984f423334e",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStarAssetStoreNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xb58bddbf2a3eAD704455fb781Dd7E5b053eb7B4B",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event BuyStarAssetNFT(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 nftId, address indexed tokenAddr, uint256 value)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event StarAssetNftFundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                    "event StarAssetNftFundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                    "event StarNftModOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event StarNftPutOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _levelUnlockGeneralNftConfs(uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _levelUnlockStarSpecialNftConfs(uint32, uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _star1155() view returns (address)",
                    "function _starFactory() view returns (address)",
                    "function _starNft() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function buyStarAssetNft(uint32 role, uint32 sellId, uint256 highiestPrice)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarNftCloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                    "function getStarNftOnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                    "function getStarNftSellIdSeed(uint32 role) view returns (uint32 idSeed)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                    "function modOnSaleStarNft(uint32 role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function putOnSaleNft(uint32 role, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setGeneralStarNftConfigByLevel(uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setSpecialStarNftConfigByRoleLevel(uint32 role, uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function starAssetNftRaiseFund(uint32 role, uint32 sellId, uint256 value)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unlockStarLevelAssets(uint32 role, uint8 level)",
                    "function unpause()",
                ],
            },
            DIStarAssetStoreNFTProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xF97E58E88f65A088DFC703D46937c9e6a19E1315",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStar1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xb2A777C7700137453a8B178bb9a98ce8f46e36d7",
                abi: [
                    "constructor(string uri)",
                    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                    "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                    "event DIStar1155Modified(uint256 indexed tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                    "event URI(string value, uint256 indexed id)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _codec() view returns (address)",
                    "function _royalties() view returns (uint256)",
                    "function balanceOf(address account, uint256 id) view returns (uint256)",
                    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                    "function burn(address account, uint256 id, uint256 value)",
                    "function burnBatch(address account, uint256[] ids, uint256[] values)",
                    "function exists(uint256 id) view returns (bool)",
                    "function fetchIncome(address erc20)",
                    "function getCodec() view returns (address c)",
                    "function getNftData(uint256 tokenId) view returns (uint256 nftId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address account, address operator) view returns (bool)",
                    "function mint(address to, uint256 id, uint256 amount, bytes data)",
                    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function modNftData(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "function modifyExtendData(uint256 id, bytes extendData)",
                    "function name() view returns (string)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setCodec(address c)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function totalSupply(uint256 id) view returns (uint256)",
                    "function unpause()",
                    "function updateURI(string newuri)",
                    "function uri(uint256) view returns (string)",
                ],
            },
            DIStarNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x2F967B285c57BD2adF425b09c200056787Ce2a64",
                abi: [
                    "constructor(string name, string symbol, string baseTokenURI)",
                    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                    "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                    "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                    "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                    "event DIStarNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "event DIStarNFTModified(uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function FREEZE_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _codec() view returns (address)",
                    "function _royalties() view returns (uint256)",
                    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function approve(address to, uint256 tokenId)",
                    "function balanceOf(address owner) view returns (uint256)",
                    "function burn(uint256 tokenId)",
                    "function exists(uint256 tokenId) view returns (bool)",
                    "function extendNftData(string extendName)",
                    "function fetchIncome(address erc20)",
                    "function freeze(uint256 tokenId)",
                    "function getApproved(uint256 tokenId) view returns (address)",
                    "function getCodec() view returns (address c)",
                    "function getNftData(uint256 tokenId) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address owner, address operator) view returns (bool)",
                    "function isFreezed(uint256 tokenId) view returns (bool)",
                    "function mint(address to, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) returns (uint256)",
                    "function modNftData(uint256 tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function name() view returns (string)",
                    "function notFreezed(uint256 tokenId) view returns (bool)",
                    "function ownerOf(uint256 tokenId) view returns (address)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setCodec(address c)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function tokenByIndex(uint256 index) view returns (uint256)",
                    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                    "function tokenURI(uint256 tokenId) view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transferFrom(address from, address to, uint256 tokenId)",
                    "function unfreeze(uint256 tokenId)",
                    "function unpause()",
                    "function updateURI(string baseTokenURI)",
                ],
            },
            DIStar1155Codec: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xF32f76fa6493fF4D3A918A44A6cf99009f2d2ef5",
                abi: [
                    "function fromCharacterItemData(tuple(uint8 citp, uint64 add) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromExpeditionItemData(tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromMysteryBoxData(tuple(uint32 randomType, uint32 mysteryType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromRoomItemData(tuple(uint32 roomItemId, uint32 roomItemType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function getCharacterItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint8 citp, uint64 add) ed)",
                    "function getDIStarAttrByID(uint256 id) pure returns (tuple(uint32 role, uint16 tp, uint32 id) attr)",
                    "function getExpeditionData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) ed)",
                    "function getIDFromRoleAndAttribue(uint32 role, uint256 attr) pure returns (uint256 id)",
                    "function getMysteryBoxData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 randomType, uint32 mysteryType) rd)",
                    "function getRoomItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 roomItemId, uint32 roomItemType) rd)",
                    "function getTpFromID(uint256 id) pure returns (uint16 tp)",
                    "function setDIStarAttrToID(tuple(uint32 role, uint16 tp, uint32 id) attr) pure returns (uint256 id)",
                ],
            },
            DIStarNFTCodec_V2: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xCc7D7181233f4FE073245644DF32c05DeD07f77e",
                abi: [
                    "function fromCharacterData(tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                    "function fromContentData(tuple(uint16 mediaType, uint32 contentID) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                    "function getCharacterData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) cd)",
                    "function getContentData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint16 mediaType, uint32 contentID) c)",
                ],
            },
            DIStarFactory_V3_Config: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x41bb8FfaeeD2A4C5A384abf3999206d359A937de",
                abi: [
                    "constructor()",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function _BABCheckin(uint32) view returns (bool)",
                    "function _BABSupports(uint32) view returns (bool)",
                    "function _checkinConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval)",
                    "function _fanTypeMaxSPFactor(uint8) view returns (uint32)",
                    "function _gradeMaxSPFactor(uint8) view returns (uint32)",
                    "function _isbt721() view returns (address)",
                    "function _popSupportConfigs(uint8, uint32) view returns (uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                    "function _starConfig() view returns (uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop)",
                    "function _starInitAsset1155Confs(uint32, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _starInitAssetNftConfs(uint32, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _starLevelConfigs(uint8) view returns (uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd)",
                    "function _supportConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                    "function getCheckinConfigByLevel(uint8 starLevel, uint32 checkinType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                    "function getDIStarConfig() view returns (tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                    "function getDIStarInitAsset1155Configs(uint32 starRole) view returns (tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                    "function getDIStarInitAssetNftConfigs(uint32 starRole) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                    "function getMaxSPFactorByFanType(uint8 fanType) view returns (uint32 factor)",
                    "function getMaxSPFactorByGrade(uint8 grade) view returns (uint32 factor)",
                    "function getMaxSPLimitByStarLevel(uint8 starLevel) view returns (uint64 maxSPLimit)",
                    "function getPopSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarLevelConfigByLevel(uint8 starLevel) view returns (tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                    "function getSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setCheckinConfig(uint8 starLevel, uint32 checkinType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                    "function setDIStarInitAsset1155Configs(uint32 starRole, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setDIStarInitAssetNftConfigs(uint32 starRole, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setDIStarsConfig(tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                    "function setISBT721Address(address isbt721)",
                    "function setMaxSPFactorByFanType(uint8 fanType, uint32 factor)",
                    "function setMaxSPFactorByGrade(uint8 grade, uint32 factor)",
                    "function setPopSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function setStarLevelConfig(uint8 starLevel, tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                    "function setSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                ],
            },
            TokenPrices: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xb181C850D65F85E0Bb4e02c5b84b8E309052f4F6",
                abi: [
                    "constructor()",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DefiPoolType_UniswapV2() view returns (uint8)",
                    "function DefiPoolType_UniswapV3() view returns (uint8)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function _chainLinkFeeds(address) view returns (address)",
                    "function _defiPools(address) view returns (uint8 poolType, uint8 tokenIndex, address poolAddr)",
                    "function _univ3_getTokenPrice_0(address pairAddress, uint256 amount) view returns (uint256)",
                    "function _univ3_getTokenPrice_1(address pairAddress, uint256 amount) view returns (uint256)",
                    "function getERC20TokenUSDPrice(address tokenAddr) view returns (uint256)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setChainLinkTokenPriceSource(address tokenAddr, address feedAddr)",
                    "function setDefiPoolSource(address tokenAddr, tuple(uint8 poolType, uint8 tokenIndex, address poolAddr) defiPoolSource)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                ],
            },
        },
    };
} else if (VERSION === "main") {
    contract_config = {
        chainId: "42161",
        chainName: "Arbitrum One",
        nativeCurrency: {
            name: "ETH",
            symbol: "ETH",
            decimals: 18,
        },
        rpcUrls: ["https://arb1.arbitrum.io/rpc"],
        blockExplorerUrls: ["https://arbiscan.io"],
        txUrlPrefix: "https://arbiscan.io/tx/",
        charge: {
            addr: {
                mintfee: "0xE7EFAcb6F9A8C85bea83455eD6AA8822e34F8e2B",
                unbindfee: "0xE7EFAcb6F9A8C85bea83455eD6AA8822e34F8e2B",
                goldcharge: "0xE7EFAcb6F9A8C85bea83455eD6AA8822e34F8e2B",
            },
            fee: {},
        },
        oracle_rand_extra_fee: "600000000000000",
        batch10_oracle_rand_extra_fee: "3000000000000000",
        expedition_tms_per_block: 12,
    };

    contract_abi = {
        contracts: {
            MockERC20: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xD55Ed7182f8eEA5b88A711EA9565dF54311e3c1b",
                abi: [
                    "constructor()",
                    "event Approval(address indexed owner, address indexed spender, uint256 value)",
                    "event Transfer(address indexed from, address indexed to, uint256 value)",
                    "function allowance(address owner, address spender) view returns (uint256)",
                    "function approve(address spender, uint256 amount) returns (bool)",
                    "function balanceOf(address account) view returns (uint256)",
                    "function burn(uint256 amount)",
                    "function burnFrom(address account, uint256 amount)",
                    "function decimals() view returns (uint8)",
                    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
                    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
                    "function name() view returns (string)",
                    "function symbol() view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transfer(address to, uint256 amount) returns (bool)",
                    "function transferFrom(address from, address to, uint256 amount) returns (bool)",
                ],
            },
            LaunchpadTest: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x358a21B271639122f2912Bd9c4a00576Ea3d5186",
                abi: ["function mint(address targetLaunchpadNFT, address to, uint256 size)"],
            },
            MockTPO: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xfAE5FffcCB4c3e1d1c6178DC74c45E47952b080B",
                abi: ["function getERC20TokenUSDPrice(address tokenAddr) pure returns (uint256)"],
            },
            DIStepIncreaseSales: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x0122A207f21c6C6971b5C7273c8d1dF33595651c",
                abi: [],
            },
            DIStepIncreaseSalesGrade: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xc4b35c32CC3BdFD10D2C6E72B05bEC8a8c19d91B",
                abi: [],
            },
            DICloudSales: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x1b763103565140442CDb11dC392f184a44F5829d",
                abi: [],
            },
            TransferHelper: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x463E1037f61edC4235e52Cc36bFEdFF9fF4ceb5c",
                abi: [],
            },
            DIArrayHelper: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xf3EEB7cf1080810331EdA7Eb8d68eFCEEF7435D8",
                abi: [],
            },
            DIFansNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xAE84cA8AB3A860f2C7eB76bD364c1CAE00b6e501",
                abi: [
                    "constructor(string name, string symbol, string baseTokenURI)",
                    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                    "event DIFansAddMaxSP(uint256 indexed tokenId, uint64 maxSP, uint64 maxSPAdd)",
                    "event DIFansAddSp(uint256 indexed tokenId, uint64 sp, uint64 spAdd)",
                    "event DIFansAppendReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                    "event DIFansModGrade(uint256 indexed tokenId, uint8 grade)",
                    "event DIFansModMaxSP(uint256 indexed tokenId, uint64 maxSP)",
                    "event DIFansModReserve(uint256 indexed tokenId, uint208 reserve)",
                    "event DIFansModReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                    "event DIFansModSp(uint256 indexed tokenId, uint64 sp)",
                    "event DIFansNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                    "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                    "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                    "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function FREEZE_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _royalties() view returns (uint256)",
                    "function addMaxSP(uint256 tokenId, uint64 maxSPAdd, uint64 maxSPLimit)",
                    "function addSp(uint256 tokenId, uint64 spAdd)",
                    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function appendReserve1(uint256 tokenId, uint32 reserve) returns (uint32 index)",
                    "function approve(address to, uint256 tokenId)",
                    "function balanceOf(address owner) view returns (uint256)",
                    "function burn(uint256 tokenId)",
                    "function exists(uint256 tokenId) view returns (bool)",
                    "function extendNftData(string extendName)",
                    "function fetchIncome(address erc20)",
                    "function freeze(uint256 tokenId)",
                    "function getApproved(uint256 tokenId) view returns (address)",
                    "function getNftData(uint256 tokenId) view returns (tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address owner, address operator) view returns (bool)",
                    "function isFreezed(uint256 tokenId) view returns (bool)",
                    "function mint(address to, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data) returns (uint256)",
                    "function modGrade(uint256 tokenId, uint8 grade)",
                    "function modMaxSP(uint256 tokenId, uint64 maxSP)",
                    "function modReserve(uint256 tokenId, uint208 reserve)",
                    "function modReserve1(uint256 tokenId, uint32 index, uint32 reserve)",
                    "function modSp(uint256 tokenId, uint64 sp)",
                    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function name() view returns (string)",
                    "function notFreezed(uint256 tokenId) view returns (bool)",
                    "function ownerOf(uint256 tokenId) view returns (address)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function tokenByIndex(uint256 index) view returns (uint256)",
                    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                    "function tokenURI(uint256 tokenId) view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transferFrom(address from, address to, uint256 tokenId)",
                    "function unfreeze(uint256 tokenId)",
                    "function unpause()",
                    "function updateURI(string baseTokenURI)",
                ],
            },
            DIFansCreator_V4: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xC98C5cFD95bd402e000beD52e947f3AEB788043e",
                abi: [
                    "constructor() payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event FansGenesisPhaseStarted(uint32 indexed starRole)",
                    "event FansNormalPhaseStarted(uint32 indexed starRole)",
                    "event GenesisFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Initialized(uint8 version)",
                    "event NormalFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event SuperFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function CREATOR_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _fansCreateInfo(uint32) view returns (uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated)",
                    "function _fansNFT() view returns (address)",
                    "function _genesisFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function _maxGenesisNFTCount() view returns (uint32)",
                    "function _maxSuperFanNFTCount() view returns (uint32)",
                    "function _minGenesisNFTCount() view returns (uint32)",
                    "function _normalFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                    "function _starFactory() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function _superFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                    "function convertGenesisFan(uint32 starRole, uint8 grade, string tokenName, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function convertNormalFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function convertSuperFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function getFansCreateInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                    "function getFansCreatedInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                    "function getGenesisSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getNormalSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getSuperSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function launchGenesisFansConvert(uint32 starRole)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function removeChargeToken(string tokenName)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setGenesisFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setGenesisNFTCount(uint32 maxCount, uint32 minCount)",
                    "function setInitMaxSP(uint8 fanType, uint8 grade, uint64 maxSP)",
                    "function setInitSP(uint8 fanType, uint8 grade, uint64 SP)",
                    "function setMaxSuperFanNFTCount(uint32 count)",
                    "function setNormalFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setReceiveIncomeAddr(address incomeAddr)",
                    "function setStarFactoryAddress(address starFactory)",
                    "function setSuperFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setTPOracleAddr(address tpOracleAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                ],
            },
            DIFansCreatorProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x1A97589dd51cDb1CccE3c7563b2dff2C3368B500",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DITokens1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x32488ec6Cd397A0A81ebbD3D6950Fe0355437FB1",
                abi: [
                    "constructor(string uri)",
                    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                    "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                    "event URI(string value, uint256 indexed id)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DREAM_COIN_ID() view returns (uint256)",
                    "function DREAM_POINT_ID() view returns (uint256)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _royalties() view returns (uint256)",
                    "function balanceOf(address account, uint256 id) view returns (uint256)",
                    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                    "function burn(address account, uint256 id, uint256 value)",
                    "function burnBatch(address account, uint256[] ids, uint256[] values)",
                    "function exists(uint256 id) view returns (bool)",
                    "function fetchIncome(address erc20)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address account, address operator) view returns (bool)",
                    "function mint(address to, uint256 id, uint256 amount, bytes data)",
                    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function modifyExtendData(uint256 id, bytes extendData)",
                    "function name() view returns (string)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function totalSupply(uint256 id) view returns (uint256)",
                    "function unpause()",
                    "function updateURI(string newuri)",
                    "function uri(uint256) view returns (string)",
                ],
            },
            DIStarFactory_V3: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x5143B6244f7e21A2cc819a298194339ef3260F3E",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DIStarCreated(uint32 indexed starRole, address indexed addr)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _addressToStarId(address) view returns (uint32)",
                    "function _currDIStarImpl() view returns (address)",
                    "function _fansNFT() view returns (address)",
                    "function _starContracts(uint32) view returns (address)",
                    "function _starPool() view returns (address)",
                    "function _starStore1155() view returns (address)",
                    "function _starStoreNft() view returns (address)",
                    "function _starsCreated(uint256) view returns (uint32)",
                    "function callDIStar(uint32 starRole, bytes callData) returns (bytes retrundata)",
                    "function createDIStar(uint32 starRole) returns (address starConAddr)",
                    "function getConfigAddress() view returns (address)",
                    "function getDIStarAddress(uint32 starRole) view returns (address)",
                    "function getDIStarByIndex(uint32 index) view returns (uint32 starRole)",
                    "function getDIStarIdByContractAddress(address addr) view returns (uint32)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTotalStars() view returns (uint32 starCount)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setConfigAddress(address configaddr)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarAssetStore(address store1155, address storenft)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setTPOAddress(address tpo, address receiveAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                    "function upgradeDIStarImpl(address newImplAddr)",
                ],
            },
            DIStarFactoryProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xa54f30630bCf23481f182f4273A9E4857c94A1b8",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStarPool_V3: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xdCB021f8b6e9FC8D51EE00d611598959A7248189",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DispatchStarPool1155(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event DispatchStarPool20(address indexed tokenAddr, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event FansNFT1155RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, uint256 indexed tokenId, address usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                    "event FansNFT20RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, address indexed usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                    "event FillStarPool20(address indexed tokenAddr, uint256 value, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event Income1155Burned(address indexed tokenAddr, uint256 tokenId, uint256 burned, uint256 totalIncome)",
                    "event Income20Burned(address indexed tokenAddr, uint256 burned, uint256 totalIncome)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Share1155Income(address indexed tokenAddr, uint256 indexed tokenId, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                    "event Share20Income(address indexed tokenAddr, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                    "event Team1155RevenueFetched(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                    "event Team20RevenueFetched(address indexed tokenAddr, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "event UserDITokenAdded(address indexed userAddr, uint256 indexed tokenId, uint256 addValue)",
                    "event UserDITokenFetched(address indexed userAddr, uint256 indexed tokenId, uint256 value)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DREAM_COIN_MINTER_ROLE() view returns (bytes32)",
                    "function DREAM_POINT_MINTER_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function INCOME_CONVERT_FANSNFT() view returns (bytes32)",
                    "function INCOME_STARASSET_CLOUDSALE() view returns (bytes32)",
                    "function INCOME_STARASSET_SELL() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT_1155() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT_20() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansCreator() view returns (address)",
                    "function _fansNFT() view returns (address)",
                    "function _fansNFT1155Revenue(uint64, address, uint256) view returns (uint256)",
                    "function _fansNFT20Revenue(uint64, address) view returns (uint256)",
                    "function _income1155Status(address, uint256) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                    "function _income20Status(address) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                    "function _incomeShareConf(bytes32) view returns (uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates)",
                    "function _star1155Pools(uint32, address, uint256) view returns (uint256)",
                    "function _star20Pools(uint32, address) view returns (uint256)",
                    "function _starFactory() view returns (address)",
                    "function _token1155() view returns (address)",
                    "function _userDITokens(address, uint256) view returns (uint256)",
                    "function burn1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value)",
                    "function burn20Token(address tokenAddr, address fromAddr, uint256 amount)",
                    "function burn721Token(address tokenAddr, address fromAddr, uint256 tokenId)",
                    "function burnPool1155(address tokenAddr, uint256 tokenId)",
                    "function burnPool20(address tokenAddr)",
                    "function charge1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value, bytes data)",
                    "function charge20Token(address tokenAddr, address fromAddr, uint256 value)",
                    "function charge721Token(address tokenAddr, address fromAddr, address toAddr, uint256 tokenId, bytes data)",
                    "function dispatchStarPool1155(address tokenAddr, uint256 tokenId, uint256 value, address toAddr, uint32 starRole)",
                    "function dispatchStarPool20(address tokenAddr, uint256 value, address toAddr, uint32 starRole)",
                    "function fetchDITokens(uint256 tokenId) returns (uint256 value)",
                    "function fetchFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId)",
                    "function fetchFansNFT20Revenue(uint64 fansNFTId, address tokenAddr)",
                    "function fetchIncome(address tokenAddr, uint256 value, address toAddr)",
                    "function fetchTeam1155Revenue(address tokenAddr, uint256 tokenId, uint256 value, address toAddr)",
                    "function fetchTeam20Revenue(address tokenAddr, uint256 value, address toAddr)",
                    "function fillStarPool20(address tokenAddr, uint256 value, uint32 starRole)",
                    "function getDITokenAmount(address userAddr, uint256 tokenId) view returns (uint256 value)",
                    "function getFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId) view returns (uint256 value)",
                    "function getFansNFT20Revenue(uint64 fansNFTId, address tokenAddr) view returns (uint256 value)",
                    "function getIncome1155Status(address tokenAddr, uint256 tokenId) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                    "function getIncome20Status(address tokenAddr) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function giveDreamCoins(address toUserAddr, uint256 value)",
                    "function giveDreamPoints(address toUserAddr, uint256 value)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function mintDreamCoins(address toUserAddr, uint256 value, bytes data)",
                    "function mintDreamPoints(address toUserAddr, uint256 value, bytes data)",
                    "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) pure returns (bytes4)",
                    "function onERC1155Received(address operator, address from, uint256 tokenId, uint256 value, bytes data) pure returns (bytes4)",
                    "function onERC721Received(address operator, address from, uint256 tokenId, bytes data) pure returns (bytes4)",
                    "function onShare1155Income(bytes32 incomeType, address tokenAddr, uint256 tokenId, uint64 fansNFTId, uint256 value)",
                    "function onShare20Income(bytes32 incomeType, address tokenAddr, uint64 fansNFTId, uint256 value)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansCreatorAddress(address addr)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarFactoryAddress(address addr)",
                    "function setDITokens1155Address(address token1155)",
                    "function setIncomeShare(bytes32 incomeType, tuple(uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates) conf)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                ],
            },
            DIStarPoolProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x38D5d652f91fC382B1079e8c67894A887ae27dD5",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStar_V2: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x9F4C215077adAD7715BCF19cC882FdFc827fC87D",
                abi: [
                    "constructor() payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DaylyCheckin(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) checkInConf, uint256 lastCheckinBlock, uint32 traineeId)",
                    "event DaylyPopSupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastPopSupportBlock)",
                    "event DaylySupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastSupportBlock, uint32 traineeId)",
                    "event FansNFTBinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                    "event FansNFTUnbinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event StarPopularityAdded(uint32 indexed starRole, uint64 pop, uint64 popAdded)",
                    "event StarReputationAdded(uint32 indexed starRole, uint64 rep, uint64 repAdded)",
                    "event StarRoomItemActivated(uint32 indexed starRole, tuple(uint32 roomItemId, uint32 roomItemType) item)",
                    "event StarSkillAdded(uint32 indexed starRole, uint64 skill, uint64 skillAdded)",
                    "event StarUpgraded(uint32 indexed starRole, uint8 newLevel, address indexed opAddr)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                    "function _starFactory() view returns (address)",
                    "function _starInfos() view returns (uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill)",
                    "function _starPool() view returns (address)",
                    "function _starRole() view returns (uint32)",
                    "function _starRoomItems(uint256) view returns (uint32 roomItemId, uint32 roomItemType)",
                    "function _starStore1155() view returns (address)",
                    "function _starStoreNft() view returns (address)",
                    "function _token1155() view returns (address)",
                    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                    "function addFansMaxSP(uint256 fansNFTId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) fansNftData, uint64 maxSpAdd)",
                    "function bindFansNFT(uint256 tokenId)",
                    "function daylyCheckin(uint32 checkinType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                    "function daylyPopSupport(uint32 supportType)",
                    "function daylySupport(uint32 supportType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                    "function getFansNFTByUser(address userAddr) view returns (uint64 tokenId)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarInfo() view returns (tuple(uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill) info)",
                    "function getUserByFansNFT(uint64 tokenId) view returns (address userAddr)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function getfansNFTOpData_lastCheckinBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function getfansNFTOpData_lastPopSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function getfansNFTOpData_lastSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function onGenesisFanCreated(uint256 tokenId, address userAddr)",
                    "function onGenesisSuccess(uint32 starRole)",
                    "function onNormalFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                    "function onStarRoomItemActivate(tuple(uint32 roomItemId, uint32 roomItemType) item)",
                    "function onSuperFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function removeChargeToken(string tokenName)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarAssetStore(address store1155, address storenft)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setDITokens1155Address(address token1155)",
                    "function setIDIStarFactory_Config(address f)",
                    "function setReceiveIncomeAddr(address incomeAddr)",
                    "function setTPOracleAddr(address tpOracleAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unbindFansNFT(uint256 tokenId)",
                    "function unpause()",
                    "function upgradeStar()",
                ],
            },
            DIStarAssetStore1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x7eAa572da342B1F19823a7b4091311ee43B47359",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event BuyStarAsset1155(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 token1155Id, uint256 amount, address indexed tokenAddr, uint256 value)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Star1155ModOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event Star1155PutOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event StarAsset1155FundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                    "event StarAsset1155FundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _levelUnlockGeneral1155Confs(uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _levelUnlockStarSpecial1155Confs(uint32, uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _star1155() view returns (address)",
                    "function _starFactory() view returns (address)",
                    "function _starNft() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function buyStarAsset1155(uint32 role, uint32 sellId, uint256 amount, uint256 highiestPrice)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStar1155CloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                    "function getStar1155OnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                    "function getStar1155SellIdSeed(uint32 role) view returns (uint32 idSeed)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                    "function modOnSaleStar1155(uint32 role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function putOnSale1155(uint32 role, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setGeneralStar1155ConfigByLevel(uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setSpecialStar1155ConfigByRoleLevel(uint32 role, uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function starAsset1155RaiseFund(uint32 role, uint32 sellId, uint256 value)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unlockStarLevelAssets(uint32 role, uint8 level)",
                    "function unpause()",
                ],
            },
            DIStarAssetStore1155Proxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x1D4576f58E413a766679751d538BE5d7c6afAb0d",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStarAssetStoreNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x6ce0044892E5dc0ea0A98a049Efea6D2FBB19879",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event BuyStarAssetNFT(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 nftId, address indexed tokenAddr, uint256 value)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event StarAssetNftFundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                    "event StarAssetNftFundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                    "event StarNftModOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event StarNftPutOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _levelUnlockGeneralNftConfs(uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _levelUnlockStarSpecialNftConfs(uint32, uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _star1155() view returns (address)",
                    "function _starFactory() view returns (address)",
                    "function _starNft() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function buyStarAssetNft(uint32 role, uint32 sellId, uint256 highiestPrice)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarNftCloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                    "function getStarNftOnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                    "function getStarNftSellIdSeed(uint32 role) view returns (uint32 idSeed)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                    "function modOnSaleStarNft(uint32 role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function putOnSaleNft(uint32 role, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setGeneralStarNftConfigByLevel(uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setSpecialStarNftConfigByRoleLevel(uint32 role, uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function starAssetNftRaiseFund(uint32 role, uint32 sellId, uint256 value)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unlockStarLevelAssets(uint32 role, uint8 level)",
                    "function unpause()",
                ],
            },
            DIStarAssetStoreNFTProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x291FC9395f35d55ae270d59DFDcBbD31E5e0c879",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStar1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x0b324D2ED10d3047E5ffbd639bD5F821D6f13AB0",
                abi: [
                    "constructor(string uri)",
                    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                    "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                    "event DIStar1155Modified(uint256 indexed tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                    "event URI(string value, uint256 indexed id)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _codec() view returns (address)",
                    "function _royalties() view returns (uint256)",
                    "function balanceOf(address account, uint256 id) view returns (uint256)",
                    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                    "function burn(address account, uint256 id, uint256 value)",
                    "function burnBatch(address account, uint256[] ids, uint256[] values)",
                    "function exists(uint256 id) view returns (bool)",
                    "function fetchIncome(address erc20)",
                    "function getCodec() view returns (address c)",
                    "function getNftData(uint256 tokenId) view returns (uint256 nftId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address account, address operator) view returns (bool)",
                    "function mint(address to, uint256 id, uint256 amount, bytes data)",
                    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function modNftData(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "function modifyExtendData(uint256 id, bytes extendData)",
                    "function name() view returns (string)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setCodec(address c)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function totalSupply(uint256 id) view returns (uint256)",
                    "function unpause()",
                    "function updateURI(string newuri)",
                    "function uri(uint256) view returns (string)",
                ],
            },
            DIStarNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x8634B306731646FD52aa6B61f795E94483DB8650",
                abi: [
                    "constructor(string name, string symbol, string baseTokenURI)",
                    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                    "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                    "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                    "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                    "event DIStarNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "event DIStarNFTModified(uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function FREEZE_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _codec() view returns (address)",
                    "function _royalties() view returns (uint256)",
                    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function approve(address to, uint256 tokenId)",
                    "function balanceOf(address owner) view returns (uint256)",
                    "function burn(uint256 tokenId)",
                    "function exists(uint256 tokenId) view returns (bool)",
                    "function extendNftData(string extendName)",
                    "function fetchIncome(address erc20)",
                    "function freeze(uint256 tokenId)",
                    "function getApproved(uint256 tokenId) view returns (address)",
                    "function getCodec() view returns (address c)",
                    "function getNftData(uint256 tokenId) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address owner, address operator) view returns (bool)",
                    "function isFreezed(uint256 tokenId) view returns (bool)",
                    "function mint(address to, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) returns (uint256)",
                    "function modNftData(uint256 tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function name() view returns (string)",
                    "function notFreezed(uint256 tokenId) view returns (bool)",
                    "function ownerOf(uint256 tokenId) view returns (address)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setCodec(address c)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function tokenByIndex(uint256 index) view returns (uint256)",
                    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                    "function tokenURI(uint256 tokenId) view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transferFrom(address from, address to, uint256 tokenId)",
                    "function unfreeze(uint256 tokenId)",
                    "function unpause()",
                    "function updateURI(string baseTokenURI)",
                ],
            },
            DIStar1155Codec: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xFD8Ba2Fe3A325034f3a4bAcB25799fe7791AC8E8",
                abi: [
                    "function fromCharacterItemData(tuple(uint8 citp, uint64 add) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromExpeditionItemData(tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromMysteryBoxData(tuple(uint32 randomType, uint32 mysteryType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromRoomItemData(tuple(uint32 roomItemId, uint32 roomItemType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function getCharacterItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint8 citp, uint64 add) ed)",
                    "function getDIStarAttrByID(uint256 id) pure returns (tuple(uint32 role, uint16 tp, uint32 id) attr)",
                    "function getExpeditionData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) ed)",
                    "function getIDFromRoleAndAttribue(uint32 role, uint256 attr) pure returns (uint256 id)",
                    "function getMysteryBoxData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 randomType, uint32 mysteryType) rd)",
                    "function getRoomItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 roomItemId, uint32 roomItemType) rd)",
                    "function getTpFromID(uint256 id) pure returns (uint16 tp)",
                    "function setDIStarAttrToID(tuple(uint32 role, uint16 tp, uint32 id) attr) pure returns (uint256 id)",
                ],
            },
            DIStarNFTCodec_V2: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xDCA9B38EB86A5a7B981dD9c9Da83EF8A1292f0E4",
                abi: [
                    "function fromCharacterData(tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                    "function fromContentData(tuple(uint16 mediaType, uint32 contentID) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                    "function getCharacterData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) cd)",
                    "function getContentData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint16 mediaType, uint32 contentID) c)",
                ],
            },
            DIStarFactory_V3_Config: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xF6f628a490c12C852ae0992A476D6a38209AA680",
                abi: [
                    "constructor()",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function _BABCheckin(uint32) view returns (bool)",
                    "function _BABSupports(uint32) view returns (bool)",
                    "function _checkinConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval)",
                    "function _fanTypeMaxSPFactor(uint8) view returns (uint32)",
                    "function _gradeMaxSPFactor(uint8) view returns (uint32)",
                    "function _isbt721() view returns (address)",
                    "function _popSupportConfigs(uint8, uint32) view returns (uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                    "function _starConfig() view returns (uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop)",
                    "function _starInitAsset1155Confs(uint32, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _starInitAssetNftConfs(uint32, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _starLevelConfigs(uint8) view returns (uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd)",
                    "function _supportConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                    "function getCheckinConfigByLevel(uint8 starLevel, uint32 checkinType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                    "function getDIStarConfig() view returns (tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                    "function getDIStarInitAsset1155Configs(uint32 starRole) view returns (tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                    "function getDIStarInitAssetNftConfigs(uint32 starRole) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                    "function getMaxSPFactorByFanType(uint8 fanType) view returns (uint32 factor)",
                    "function getMaxSPFactorByGrade(uint8 grade) view returns (uint32 factor)",
                    "function getMaxSPLimitByStarLevel(uint8 starLevel) view returns (uint64 maxSPLimit)",
                    "function getPopSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarLevelConfigByLevel(uint8 starLevel) view returns (tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                    "function getSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setCheckinConfig(uint8 starLevel, uint32 checkinType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                    "function setDIStarInitAsset1155Configs(uint32 starRole, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setDIStarInitAssetNftConfigs(uint32 starRole, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setDIStarsConfig(tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                    "function setISBT721Address(address isbt721)",
                    "function setMaxSPFactorByFanType(uint8 fanType, uint32 factor)",
                    "function setMaxSPFactorByGrade(uint8 grade, uint32 factor)",
                    "function setPopSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function setStarLevelConfig(uint8 starLevel, tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                    "function setSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                ],
            },
            TokenPrices: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xe20CDb5bfa999e08E9E6c5739583634Aff18E971",
                abi: [
                    "constructor()",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DefiPoolType_UniswapV2() view returns (uint8)",
                    "function DefiPoolType_UniswapV3() view returns (uint8)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function _chainLinkFeeds(address) view returns (address)",
                    "function _defiPools(address) view returns (uint8 poolType, uint8 tokenIndex, address poolAddr)",
                    "function _univ3_getTokenPrice_0(address pairAddress, uint256 amount) view returns (uint256)",
                    "function _univ3_getTokenPrice_1(address pairAddress, uint256 amount) view returns (uint256)",
                    "function getERC20TokenUSDPrice(address tokenAddr) view returns (uint256)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setChainLinkTokenPriceSource(address tokenAddr, address feedAddr)",
                    "function setDefiPoolSource(address tokenAddr, tuple(uint8 poolType, uint8 tokenIndex, address poolAddr) defiPoolSource)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                ],
            },
        },
    };
} else if (VERSION === "localhost") {
    contract_config = {
        chainId: "31337",
        chainName: "Localhost",
        nativeCurrency: {
            name: "ETH",
            symbol: "ETH",
            decimals: 18,
        },
        rpcUrls: ["http://127.0.0.1:8545"],
        blockExplorerUrls: ["https://arbiscan.io"],
        txUrlPrefix: "https://arbiscan.io/tx/",
        charge: {
            addr: {
                mintfee: "0xE7EFAcb6F9A8C85bea83455eD6AA8822e34F8e2B",
                unbindfee: "0xE7EFAcb6F9A8C85bea83455eD6AA8822e34F8e2B",
                goldcharge: "0xE7EFAcb6F9A8C85bea83455eD6AA8822e34F8e2B",
            },
            fee: {},
        },
        oracle_rand_extra_fee: "600000000000000",
        batch10_oracle_rand_extra_fee: "3000000000000000",
        expedition_tms_per_block: 12,
    };

    contract_abi = {
        contracts: {
            MockERC20: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x503432605cd505239Ac2Aa8feF5a24255BD58b0e",
                abi: [
                    "constructor()",
                    "event Approval(address indexed owner, address indexed spender, uint256 value)",
                    "event Transfer(address indexed from, address indexed to, uint256 value)",
                    "function allowance(address owner, address spender) view returns (uint256)",
                    "function approve(address spender, uint256 amount) returns (bool)",
                    "function balanceOf(address account) view returns (uint256)",
                    "function burn(uint256 amount)",
                    "function burnFrom(address account, uint256 amount)",
                    "function decimals() view returns (uint8)",
                    "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
                    "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
                    "function name() view returns (string)",
                    "function symbol() view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transfer(address to, uint256 amount) returns (bool)",
                    "function transferFrom(address from, address to, uint256 amount) returns (bool)",
                ],
            },
            LaunchpadTest: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xa9Cd1b24E4D7F20d3160E5869D14277D82A7e73a",
                abi: ["function mint(address targetLaunchpadNFT, address to, uint256 size)"],
            },
            MockTPO: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xDF7ef54Ee08AB410fd2cD005E469f9916a743957",
                abi: ["function getERC20TokenUSDPrice(address tokenAddr) pure returns (uint256)"],
            },
            DIStepIncreaseSales: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xFe43cB543c3A5E4eabd2446015120DEAe480f151",
                abi: [],
            },
            DIStepIncreaseSalesGrade: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x144BE67C3E7e6225eb928635c6dF603C85CF7343",
                abi: [],
            },
            DICloudSales: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x2bb52C0449CE4e529739aD21123760ea29587117",
                abi: [],
            },
            TransferHelper: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xa26f0a57b4608284147bB1CB3cFd075ECB21399b",
                abi: [],
            },
            DIArrayHelper: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x0f0f4c57b85f70aeF14cF366D4c7AFb8E41E7335",
                abi: [],
            },
            DIFansNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x2BF69038B1e6eCC7fBBC252dE2289710Aa19EC6d",
                abi: [
                    "constructor(string name, string symbol, string baseTokenURI)",
                    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                    "event DIFansAddMaxSP(uint256 indexed tokenId, uint64 maxSP, uint64 maxSPAdd)",
                    "event DIFansAddSp(uint256 indexed tokenId, uint64 sp, uint64 spAdd)",
                    "event DIFansAppendReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                    "event DIFansModGrade(uint256 indexed tokenId, uint8 grade)",
                    "event DIFansModMaxSP(uint256 indexed tokenId, uint64 maxSP)",
                    "event DIFansModReserve(uint256 indexed tokenId, uint208 reserve)",
                    "event DIFansModReserve1(uint256 indexed tokenId, uint32 index, uint208 reserve)",
                    "event DIFansModSp(uint256 indexed tokenId, uint64 sp)",
                    "event DIFansNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                    "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                    "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                    "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function FREEZE_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _royalties() view returns (uint256)",
                    "function addMaxSP(uint256 tokenId, uint64 maxSPAdd, uint64 maxSPLimit)",
                    "function addSp(uint256 tokenId, uint64 spAdd)",
                    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function appendReserve1(uint256 tokenId, uint32 reserve) returns (uint32 index)",
                    "function approve(address to, uint256 tokenId)",
                    "function balanceOf(address owner) view returns (uint256)",
                    "function burn(uint256 tokenId)",
                    "function exists(uint256 tokenId) view returns (bool)",
                    "function extendNftData(string extendName)",
                    "function fetchIncome(address erc20)",
                    "function freeze(uint256 tokenId)",
                    "function getApproved(uint256 tokenId) view returns (address)",
                    "function getNftData(uint256 tokenId) view returns (tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address owner, address operator) view returns (bool)",
                    "function isFreezed(uint256 tokenId) view returns (bool)",
                    "function mint(address to, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data) returns (uint256)",
                    "function modGrade(uint256 tokenId, uint8 grade)",
                    "function modMaxSP(uint256 tokenId, uint64 maxSP)",
                    "function modReserve(uint256 tokenId, uint208 reserve)",
                    "function modReserve1(uint256 tokenId, uint32 index, uint32 reserve)",
                    "function modSp(uint256 tokenId, uint64 sp)",
                    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function name() view returns (string)",
                    "function notFreezed(uint256 tokenId) view returns (bool)",
                    "function ownerOf(uint256 tokenId) view returns (address)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function tokenByIndex(uint256 index) view returns (uint256)",
                    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                    "function tokenURI(uint256 tokenId) view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transferFrom(address from, address to, uint256 tokenId)",
                    "function unfreeze(uint256 tokenId)",
                    "function unpause()",
                    "function updateURI(string baseTokenURI)",
                ],
            },
            DIFansCreator_V4: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x84e54e7F016D7a984524Ab13539B27AB5786AcaE",
                abi: [
                    "constructor() payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event FansGenesisPhaseStarted(uint32 indexed starRole)",
                    "event FansNormalPhaseStarted(uint32 indexed starRole)",
                    "event GenesisFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Initialized(uint8 version)",
                    "event NormalFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event SuperFanNFTCreated(address indexed to, uint256 indexed starRole, uint256 indexed fanNFTId)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function CREATOR_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _fansCreateInfo(uint32) view returns (uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated)",
                    "function _fansNFT() view returns (address)",
                    "function _genesisFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function _maxGenesisNFTCount() view returns (uint32)",
                    "function _maxSuperFanNFTCount() view returns (uint32)",
                    "function _minGenesisNFTCount() view returns (uint32)",
                    "function _normalFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                    "function _starFactory() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function _superFanPrices(uint32) view returns (uint64 sellStep, uint32 increasePercent, uint64 soldCount)",
                    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                    "function convertGenesisFan(uint32 starRole, uint8 grade, string tokenName, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function convertNormalFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function convertSuperFan(uint32 starRole, uint8 grade, string tokenName, uint64 inviterId, uint256 usdValue) payable returns (uint256 fanNFTId)",
                    "function getFansCreateInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                    "function getFansCreatedInfo(uint32 starRole) view returns (tuple(uint8 creatingPhase, uint32 genesisNFTCreated, uint32 superFanNFTCreated) info)",
                    "function getGenesisSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getNormalSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getSuperSalesPrice(uint32 starRole, uint8 grade) view returns (uint256 price)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function launchGenesisFansConvert(uint32 starRole)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function removeChargeToken(string tokenName)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setGenesisFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setGenesisNFTCount(uint32 maxCount, uint32 minCount)",
                    "function setInitMaxSP(uint8 fanType, uint8 grade, uint64 maxSP)",
                    "function setInitSP(uint8 fanType, uint8 grade, uint64 SP)",
                    "function setMaxSuperFanNFTCount(uint32 count)",
                    "function setNormalFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setReceiveIncomeAddr(address incomeAddr)",
                    "function setStarFactoryAddress(address starFactory)",
                    "function setSuperFanPrice(uint32 starRole, uint64 step, uint32 percent, uint8[] grades, uint256[] prices)",
                    "function setTPOracleAddr(address tpOracleAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                ],
            },
            DIFansCreatorProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x467786F1D9BDbE2883640471984a5F81EA472c85",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DITokens1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xcbB55CeB80d30190eF2e2663941813F28C675969",
                abi: [
                    "constructor(string uri)",
                    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                    "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                    "event URI(string value, uint256 indexed id)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DREAM_COIN_ID() view returns (uint256)",
                    "function DREAM_POINT_ID() view returns (uint256)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _royalties() view returns (uint256)",
                    "function balanceOf(address account, uint256 id) view returns (uint256)",
                    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                    "function burn(address account, uint256 id, uint256 value)",
                    "function burnBatch(address account, uint256[] ids, uint256[] values)",
                    "function exists(uint256 id) view returns (bool)",
                    "function fetchIncome(address erc20)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address account, address operator) view returns (bool)",
                    "function mint(address to, uint256 id, uint256 amount, bytes data)",
                    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function modifyExtendData(uint256 id, bytes extendData)",
                    "function name() view returns (string)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function totalSupply(uint256 id) view returns (uint256)",
                    "function unpause()",
                    "function updateURI(string newuri)",
                    "function uri(uint256) view returns (string)",
                ],
            },
            DIStarFactory_V3: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xA85e679F40cAC2B4700Ca93275638F230208F915",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DIStarCreated(uint32 indexed starRole, address indexed addr)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _addressToStarId(address) view returns (uint32)",
                    "function _currDIStarImpl() view returns (address)",
                    "function _fansNFT() view returns (address)",
                    "function _starContracts(uint32) view returns (address)",
                    "function _starPool() view returns (address)",
                    "function _starStore1155() view returns (address)",
                    "function _starStoreNft() view returns (address)",
                    "function _starsCreated(uint256) view returns (uint32)",
                    "function callDIStar(uint32 starRole, bytes callData) returns (bytes retrundata)",
                    "function createDIStar(uint32 starRole) returns (address starConAddr)",
                    "function getConfigAddress() view returns (address)",
                    "function getDIStarAddress(uint32 starRole) view returns (address)",
                    "function getDIStarByIndex(uint32 index) view returns (uint32 starRole)",
                    "function getDIStarIdByContractAddress(address addr) view returns (uint32)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTotalStars() view returns (uint32 starCount)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setConfigAddress(address configaddr)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarAssetStore(address store1155, address storenft)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setTPOAddress(address tpo, address receiveAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                    "function upgradeDIStarImpl(address newImplAddr)",
                ],
            },
            DIStarFactoryProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x7576407c10DdFa7A923420fe076A854f3a465411",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStarPool_V3: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x443356B747daecB03F978e89106a42FA2A8e41FE",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DispatchStarPool1155(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event DispatchStarPool20(address indexed tokenAddr, uint256 value, address indexed toAddr, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event FansNFT1155RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, uint256 indexed tokenId, address usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                    "event FansNFT20RevenueFetched(uint64 indexed fansNFTId, address indexed tokenAddr, address indexed usetAddr, uint256 revenue, uint256 fansNFTPool, uint256 totalIncome)",
                    "event FillStarPool20(address indexed tokenAddr, uint256 value, uint32 starRole, uint256 starPool, uint256 totalIncome)",
                    "event Income1155Burned(address indexed tokenAddr, uint256 tokenId, uint256 burned, uint256 totalIncome)",
                    "event Income20Burned(address indexed tokenAddr, uint256 burned, uint256 totalIncome)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Share1155Income(address indexed tokenAddr, uint256 indexed tokenId, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                    "event Share20Income(address indexed tokenAddr, bytes32 indexed incomeType, tuple(uint32 starRole, uint64 fansNFTId, uint64 inviterNFTId, uint64 producerNFTId, uint256 value, uint256 inviterIncome, uint256 producerIncome, uint256 teamIncome, uint256 burnIncome, uint256 starPoolIncome) incomeRes)",
                    "event Team1155RevenueFetched(address indexed tokenAddr, uint256 indexed tokenId, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                    "event Team20RevenueFetched(address indexed tokenAddr, uint256 value, address indexed toAddr, uint256 teamPool, uint256 totalIncome)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "event UserDITokenAdded(address indexed userAddr, uint256 indexed tokenId, uint256 addValue)",
                    "event UserDITokenFetched(address indexed userAddr, uint256 indexed tokenId, uint256 value)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DREAM_COIN_MINTER_ROLE() view returns (bytes32)",
                    "function DREAM_POINT_MINTER_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function INCOME_CONVERT_FANSNFT() view returns (bytes32)",
                    "function INCOME_STARASSET_CLOUDSALE() view returns (bytes32)",
                    "function INCOME_STARASSET_SELL() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT_1155() view returns (bytes32)",
                    "function INCOME_STAR_SUPPORT_20() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansCreator() view returns (address)",
                    "function _fansNFT() view returns (address)",
                    "function _fansNFT1155Revenue(uint64, address, uint256) view returns (uint256)",
                    "function _fansNFT20Revenue(uint64, address) view returns (uint256)",
                    "function _income1155Status(address, uint256) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                    "function _income20Status(address) view returns (uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool)",
                    "function _incomeShareConf(bytes32) view returns (uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates)",
                    "function _star1155Pools(uint32, address, uint256) view returns (uint256)",
                    "function _star20Pools(uint32, address) view returns (uint256)",
                    "function _starFactory() view returns (address)",
                    "function _token1155() view returns (address)",
                    "function _userDITokens(address, uint256) view returns (uint256)",
                    "function burn1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value)",
                    "function burn20Token(address tokenAddr, address fromAddr, uint256 amount)",
                    "function burn721Token(address tokenAddr, address fromAddr, uint256 tokenId)",
                    "function burnPool1155(address tokenAddr, uint256 tokenId)",
                    "function burnPool20(address tokenAddr)",
                    "function charge1155Token(address tokenAddr, address fromAddr, uint256 id, uint256 value, bytes data)",
                    "function charge20Token(address tokenAddr, address fromAddr, uint256 value)",
                    "function charge721Token(address tokenAddr, address fromAddr, address toAddr, uint256 tokenId, bytes data)",
                    "function dispatchStarPool1155(address tokenAddr, uint256 tokenId, uint256 value, address toAddr, uint32 starRole)",
                    "function dispatchStarPool20(address tokenAddr, uint256 value, address toAddr, uint32 starRole)",
                    "function fetchDITokens(uint256 tokenId) returns (uint256 value)",
                    "function fetchFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId)",
                    "function fetchFansNFT20Revenue(uint64 fansNFTId, address tokenAddr)",
                    "function fetchIncome(address tokenAddr, uint256 value, address toAddr)",
                    "function fetchTeam1155Revenue(address tokenAddr, uint256 tokenId, uint256 value, address toAddr)",
                    "function fetchTeam20Revenue(address tokenAddr, uint256 value, address toAddr)",
                    "function fillStarPool20(address tokenAddr, uint256 value, uint32 starRole)",
                    "function getDITokenAmount(address userAddr, uint256 tokenId) view returns (uint256 value)",
                    "function getFansNFT1155Revenue(uint64 fansNFTId, address tokenAddr, uint256 tokenId) view returns (uint256 value)",
                    "function getFansNFT20Revenue(uint64 fansNFTId, address tokenAddr) view returns (uint256 value)",
                    "function getIncome1155Status(address tokenAddr, uint256 tokenId) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                    "function getIncome20Status(address tokenAddr) view returns (tuple(uint256 totalIncome, uint256 fansNFTPool, uint256 starPool, uint256 teamPool, uint256 burnPool) status)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function giveDreamCoins(address toUserAddr, uint256 value)",
                    "function giveDreamPoints(address toUserAddr, uint256 value)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function mintDreamCoins(address toUserAddr, uint256 value, bytes data)",
                    "function mintDreamPoints(address toUserAddr, uint256 value, bytes data)",
                    "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) pure returns (bytes4)",
                    "function onERC1155Received(address operator, address from, uint256 tokenId, uint256 value, bytes data) pure returns (bytes4)",
                    "function onERC721Received(address operator, address from, uint256 tokenId, bytes data) pure returns (bytes4)",
                    "function onShare1155Income(bytes32 incomeType, address tokenAddr, uint256 tokenId, uint64 fansNFTId, uint256 value)",
                    "function onShare20Income(bytes32 incomeType, address tokenAddr, uint64 fansNFTId, uint256 value)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansCreatorAddress(address addr)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarFactoryAddress(address addr)",
                    "function setDITokens1155Address(address token1155)",
                    "function setIncomeShare(bytes32 incomeType, tuple(uint64 inviteRates, uint64 producerRates, uint64 teamRates, uint64 burnRates) conf)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unpause()",
                ],
            },
            DIStarPoolProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xd5325C4f549Cf910B8D934fCcc1978289e561461",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStar_V2: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x621608005FAb47ff9C389c6E2E398921b7580845",
                abi: [
                    "constructor() payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event DaylyCheckin(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) checkInConf, uint256 lastCheckinBlock, uint32 traineeId)",
                    "event DaylyPopSupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastPopSupportBlock, uint32 traineeId)",
                    "event DaylySupport(uint32 indexed starRole, address indexed userAddr, uint32 _type, uint64 indexed tokenId, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) supportConf, uint256 lastSupportBlock, uint32 traineeId)",
                    "event FansNFTBinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                    "event FansNFTUnbinded(uint32 indexed starRole, uint64 indexed tokenId, address indexed userAddr)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event StarPopularityAdded(uint32 indexed starRole, uint64 pop, uint64 popAdded)",
                    "event StarReputationAdded(uint32 indexed starRole, uint64 rep, uint64 repAdded)",
                    "event StarRoomItemActivated(uint32 indexed starRole, tuple(uint32 roomItemId, uint32 roomItemType) item)",
                    "event StarSkillAdded(uint32 indexed starRole, uint64 skill, uint64 skillAdded)",
                    "event StarUpgraded(uint32 indexed starRole, uint8 newLevel, address indexed opAddr)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _oracleCharger() view returns (uint256 locked, address tokenPriceOracleAddr, address receiveIncomeAddr)",
                    "function _starFactory() view returns (address)",
                    "function _starInfos() view returns (uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill)",
                    "function _starPool() view returns (address)",
                    "function _starRole() view returns (uint32)",
                    "function _starRoomItems(uint256) view returns (uint32 roomItemId, uint32 roomItemType)",
                    "function _starStore1155() view returns (address)",
                    "function _starStoreNft() view returns (address)",
                    "function _token1155() view returns (address)",
                    "function addChargeToken(string tokenName, address tokenAddr, uint256 maximumUSDPrice, uint256 minimumUSDPrice)",
                    "function addFansMaxSP(uint256 fansNFTId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) fansNftData, uint64 maxSpAdd)",
                    "function bindFansNFT(uint256 tokenId)",
                    "function daylyCheckin(uint32 checkinType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                    "function daylyPopSupport(uint32 supportType, uint32 traineeId)",
                    "function daylySupport(uint32 supportType, string tokenName, uint256 usdValue, uint32 traineeId) payable",
                    "function getFansNFTByUser(address userAddr) view returns (uint64 tokenId)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarInfo() view returns (tuple(uint32 fansCount, uint8 level, uint64 popularity, uint64 reputation, uint64 skill) info)",
                    "function getUserByFansNFT(uint64 tokenId) view returns (address userAddr)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function getfansNFTOpData_lastCheckinBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function getfansNFTOpData_lastPopSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function getfansNFTOpData_lastSupportBlock(uint64 fansNFTId, uint32 _type) view returns (uint256)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function onGenesisFanCreated(uint256 tokenId, address userAddr)",
                    "function onGenesisSuccess(uint32 starRole)",
                    "function onNormalFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                    "function onStarRoomItemActivate(tuple(uint32 roomItemId, uint32 roomItemType) item)",
                    "function onSuperFanCreated(uint256 tokenId, tuple(uint64 maxSP, uint64 sp, uint64 invitorNftId, uint64 producerNftId, uint8 fanType, uint32 starRole, uint8 grade, uint208 reserve, uint32[] reserve1) data, address userAddr)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function removeChargeToken(string tokenName)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setDIFansNftAddress(address fansNFT)",
                    "function setDIStarAssetStore(address store1155, address storenft)",
                    "function setDIStarPoolAddress(address pool)",
                    "function setDITokens1155Address(address token1155)",
                    "function setIDIStarFactory_Config(address f)",
                    "function setReceiveIncomeAddr(address incomeAddr)",
                    "function setTPOracleAddr(address tpOracleAddr)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unbindFansNFT(uint256 tokenId)",
                    "function unpause()",
                    "function upgradeStar()",
                ],
            },
            DIStarAssetStore1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x0f8606b2EE606b03bb39c594166982131a34D630",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event BuyStarAsset1155(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 token1155Id, uint256 amount, address indexed tokenAddr, uint256 value)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Star1155ModOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event Star1155PutOnSale(uint32 indexed role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event StarAsset1155FundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                    "event StarAsset1155FundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _levelUnlockGeneral1155Confs(uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _levelUnlockStarSpecial1155Confs(uint32, uint8, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _star1155() view returns (address)",
                    "function _starFactory() view returns (address)",
                    "function _starNft() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function buyStarAsset1155(uint32 role, uint32 sellId, uint256 amount, uint256 highiestPrice)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStar1155CloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                    "function getStar1155OnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                    "function getStar1155SellIdSeed(uint32 role) view returns (uint32 idSeed)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                    "function modOnSaleStar1155(uint32 role, uint32 sellId, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function putOnSale1155(uint32 role, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setGeneralStar1155ConfigByLevel(uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setSpecialStar1155ConfigByRoleLevel(uint32 role, uint8 level, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function starAsset1155RaiseFund(uint32 role, uint32 sellId, uint256 value)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unlockStarLevelAssets(uint32 role, uint8 level)",
                    "function unpause()",
                ],
            },
            DIStarAssetStore1155Proxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xaFAf2EcE0F134ad92D429Ce691499E0A889d776e",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStarAssetStoreNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xA89dDE279f9470143e09064f1736E6E0d71AE7ac",
                abi: [
                    "constructor()",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event BuyStarAssetNFT(address indexed userAddr, uint32 indexed role, uint32 sellId, uint256 nftId, address indexed tokenAddr, uint256 value)",
                    "event Initialized(uint8 version)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event StarAssetNftFundRaise(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 value)",
                    "event StarAssetNftFundRaiseFinished(address indexed userAddr, uint32 indexed role, uint32 sellId, address indexed tokenAddr, uint256 totalFundRaised, uint256 fundRaiseTarget)",
                    "event StarNftModOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event StarNftPutOnSale(uint32 indexed role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "event Unpaused(address account)",
                    "event Upgraded(address indexed implementation)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function STAR_ROLE() view returns (bytes32)",
                    "function _fansNFT() view returns (address)",
                    "function _levelUnlockGeneralNftConfs(uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _levelUnlockStarSpecialNftConfs(uint32, uint8, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _star1155() view returns (address)",
                    "function _starFactory() view returns (address)",
                    "function _starNft() view returns (address)",
                    "function _starPool() view returns (address)",
                    "function buyStarAssetNft(uint32 role, uint32 sellId, uint256 highiestPrice)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarNftCloudSaleInfoByUser(uint32 role, uint32 sellId, address userAddr) view returns (uint256 fundRaised, bool refunded)",
                    "function getStarNftOnSaleInfo(uint32 role, uint32 sellId) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, bool cloudSaleFinished, address cloudSaleTokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock, uint256 totalFundRaised, uint256 totalRefunded, address incSaleTokenAddr, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime, tuple(uint64 sellStep, uint32 increasePercent, uint64 soldCount, uint256 price) increaseSalesInfo) info)",
                    "function getStarNftSellIdSeed(uint32 role) view returns (uint32 idSeed)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function initialize()",
                    "function initializeAddrs(address fansNFT, address star1155, address starNft, address pool, address f)",
                    "function modOnSaleStarNft(uint32 role, uint32 sellId, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function putOnSaleNft(uint32 role, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo) conf)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setGeneralStarNftConfigByLevel(uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setSpecialStarNftConfigByRoleLevel(uint32 role, uint8 level, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function starAssetNftRaiseFund(uint32 role, uint32 sellId, uint256 value)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function unlockStarLevelAssets(uint32 role, uint8 level)",
                    "function unpause()",
                ],
            },
            DIStarAssetStoreNFTProxy: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xef9298a0ab3884331Ed03ef761CF7EC8Ff722938",
                abi: [
                    "constructor(address _impl) payable",
                    "event AdminChanged(address previousAdmin, address newAdmin)",
                    "event BeaconUpgraded(address indexed beacon)",
                    "event Upgraded(address indexed implementation)",
                    "function changeAdmin(address newAdmin)",
                    "function getAdmin() view returns (address)",
                    "function upgradeTo(address _impl)",
                ],
            },
            DIStar1155: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xc4C9863560ceF5D9cAbe4923229A695A683A3071",
                abi: [
                    "constructor(string uri)",
                    "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
                    "event DIExtendable1155Modify(uint256 indexed id, bytes extendData)",
                    "event DIStar1155Modified(uint256 indexed tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
                    "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
                    "event URI(string value, uint256 indexed id)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _codec() view returns (address)",
                    "function _royalties() view returns (uint256)",
                    "function balanceOf(address account, uint256 id) view returns (uint256)",
                    "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
                    "function burn(address account, uint256 id, uint256 value)",
                    "function burnBatch(address account, uint256[] ids, uint256[] values)",
                    "function exists(uint256 id) view returns (bool)",
                    "function fetchIncome(address erc20)",
                    "function getCodec() view returns (address c)",
                    "function getNftData(uint256 tokenId) view returns (uint256 nftId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 id) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address account, address operator) view returns (bool)",
                    "function mint(address to, uint256 id, uint256 amount, bytes data)",
                    "function mintBatch(address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function modNftData(uint256 tokenId, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data)",
                    "function modifyExtendData(uint256 id, bytes extendData)",
                    "function name() view returns (string)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
                    "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setCodec(address c)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function totalSupply(uint256 id) view returns (uint256)",
                    "function unpause()",
                    "function updateURI(string newuri)",
                    "function uri(uint256) view returns (string)",
                ],
            },
            DIStarNFT: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xb259Fb4649Cd6eCf2e39FBB4E0F63a2F06594Db8",
                abi: [
                    "constructor(string name, string symbol, string baseTokenURI)",
                    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                    "event DINFTExtendModify(uint256 indexed tokenId, bytes32 nameBytes, bytes extendData)",
                    "event DINFTExtendName(string extendName, bytes32 nameBytes)",
                    "event DINFTFreeze(uint256 indexed tokenId, bool freeze)",
                    "event DIStarNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "event DIStarNFTModified(uint256 indexed tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "event Paused(address account)",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                    "event Unpaused(address account)",
                    "function DATA_ROLE() view returns (bytes32)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function FACTORY_ADMIN_ROLE() view returns (bytes32)",
                    "function FREEZE_ROLE() view returns (bytes32)",
                    "function MINTER_ROLE() view returns (bytes32)",
                    "function PAUSER_ROLE() view returns (bytes32)",
                    "function _codec() view returns (address)",
                    "function _royalties() view returns (uint256)",
                    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function approve(address to, uint256 tokenId)",
                    "function balanceOf(address owner) view returns (uint256)",
                    "function burn(uint256 tokenId)",
                    "function exists(uint256 tokenId) view returns (bool)",
                    "function extendNftData(string extendName)",
                    "function fetchIncome(address erc20)",
                    "function freeze(uint256 tokenId)",
                    "function getApproved(uint256 tokenId) view returns (address)",
                    "function getCodec() view returns (address c)",
                    "function getNftData(uint256 tokenId) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
                    "function getVersion() pure returns (string)",
                    "function getVersionTag() pure returns (string)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function isApprovedForAll(address owner, address operator) view returns (bool)",
                    "function isFreezed(uint256 tokenId) view returns (bool)",
                    "function mint(address to, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) returns (uint256)",
                    "function modNftData(uint256 tokenId, tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data)",
                    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
                    "function name() view returns (string)",
                    "function notFreezed(uint256 tokenId) view returns (bool)",
                    "function ownerOf(uint256 tokenId) view returns (address)",
                    "function pause()",
                    "function paused() view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId)",
                    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                    "function setApprovalForAll(address operator, bool approved)",
                    "function setCodec(address c)",
                    "function setRoyalties(uint256 royalties)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                    "function symbol() view returns (string)",
                    "function tokenByIndex(uint256 index) view returns (uint256)",
                    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                    "function tokenURI(uint256 tokenId) view returns (string)",
                    "function totalSupply() view returns (uint256)",
                    "function transferFrom(address from, address to, uint256 tokenId)",
                    "function unfreeze(uint256 tokenId)",
                    "function unpause()",
                    "function updateURI(string baseTokenURI)",
                ],
            },
            DIStar1155Codec: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x69D5B3ac509931bD0024b9DD6E5bF3918F0B68Bf",
                abi: [
                    "function fromCharacterItemData(tuple(uint8 citp, uint64 add) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromExpeditionItemData(tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromMysteryBoxData(tuple(uint32 randomType, uint32 mysteryType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function fromRoomItemData(tuple(uint32 roomItemId, uint32 roomItemType) data) pure returns (tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) outdata)",
                    "function getCharacterItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint8 citp, uint64 add) ed)",
                    "function getDIStarAttrByID(uint256 id) pure returns (tuple(uint32 role, uint16 tp, uint32 id) attr)",
                    "function getExpeditionData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint64 combatPower, uint8 slot, uint32 avatar, uint32 func) ed)",
                    "function getIDFromRoleAndAttribue(uint32 role, uint256 attr) pure returns (uint256 id)",
                    "function getMysteryBoxData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 randomType, uint32 mysteryType) rd)",
                    "function getRoomItemData(tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) data) pure returns (tuple(uint32 roomItemId, uint32 roomItemType) rd)",
                    "function getTpFromID(uint256 id) pure returns (uint16 tp)",
                    "function setDIStarAttrToID(tuple(uint32 role, uint16 tp, uint32 id) attr) pure returns (uint256 id)",
                ],
            },
            DIStarNFTCodec_V2: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xBD1a1e0F480071C2566b3Ab1df41a3E184930339",
                abi: [
                    "function fromCharacterData(tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                    "function fromContentData(tuple(uint16 mediaType, uint32 contentID) data) pure returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) outdata)",
                    "function getCharacterData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint8 level, uint64 exp, uint64 combatPower, uint32 avatar, uint32 skill) cd)",
                    "function getContentData(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) data) pure returns (tuple(uint16 mediaType, uint32 contentID) c)",
                ],
            },
            DIStarFactory_V3_Config: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0xA45a838d23F1EB0FF78CD08DCeBE38EA142B4944",
                abi: [
                    "constructor()",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function _BABCheckin(uint32) view returns (bool)",
                    "function _BABSupports(uint32) view returns (bool)",
                    "function _checkinConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval)",
                    "function _fanTypeMaxSPFactor(uint8) view returns (uint32)",
                    "function _gradeMaxSPFactor(uint8) view returns (uint32)",
                    "function _isbt721() view returns (address)",
                    "function _popSupportConfigs(uint8, uint32) view returns (uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                    "function _starConfig() view returns (uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop)",
                    "function _starInitAsset1155Confs(uint32, uint256) view returns (uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _starInitAssetNftConfs(uint32, uint256) view returns (tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)",
                    "function _starLevelConfigs(uint8) view returns (uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd)",
                    "function _supportConfigs(uint8, uint32) view returns (uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee)",
                    "function getCheckinConfigByLevel(uint8 starLevel, uint32 checkinType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                    "function getDIStarConfig() view returns (tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                    "function getDIStarInitAsset1155Configs(uint32 starRole) view returns (tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                    "function getDIStarInitAssetNftConfigs(uint32 starRole) view returns (tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[])",
                    "function getMaxSPFactorByFanType(uint8 fanType) view returns (uint32 factor)",
                    "function getMaxSPFactorByGrade(uint8 grade) view returns (uint32 factor)",
                    "function getMaxSPLimitByStarLevel(uint8 starLevel) view returns (uint64 maxSPLimit)",
                    "function getPopSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function getStarLevelConfigByLevel(uint8 starLevel) view returns (tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                    "function getSupportConfigByLevelAndType(uint8 starLevel, uint32 supportType) view returns (tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setCheckinConfig(uint8 starLevel, uint32 checkinType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 popAdd, uint64 repAdd, uint64 syncAdd, uint256 usdValue, uint256 blocksInterval) config)",
                    "function setDIStarInitAsset1155Configs(uint32 starRole, tuple(uint256 tokenIdWithoutRole, tuple(uint8 grade, uint248 reserve1, uint32[] reserve2) tokenData, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setDIStarInitAssetNftConfigs(uint32 starRole, tuple(tuple(uint32 role, uint8 tp, uint8 grade, uint216 reserve1, uint256 reserve2, uint32[] reserve3) mintInfo, uint64 maxSPAdd, uint256 dpAdd, uint64 spAdd, tuple(address tokenAddr, uint256 fundRaiseTarget, uint256 minimumSend, uint256 maximumPerUser, uint256 finishBlock) cloudSaleInfo, tuple(address tokenAddr, uint64 sellStep, uint32 increasePercent, uint256 price, uint64 maxSupply, uint64 startSaleTime, uint64 finishSaleTime) incSaleInfo)[] confs)",
                    "function setDIStarsConfig(tuple(uint64 inviteSuperFanMaxSP, uint64 inviteSuperFanDP, uint64 newSuperFanPop, uint64 inviteNormalFanMaxSP, uint64 inviteNormalFanDP, uint64 newNormalFanPop) config)",
                    "function setISBT721Address(address isbt721)",
                    "function setMaxSPFactorByFanType(uint8 fanType, uint32 factor)",
                    "function setMaxSPFactorByGrade(uint8 grade, uint32 factor)",
                    "function setPopSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 spAdd, uint64 skillAdd, uint64 trainAdd, uint256 tokenValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function setStarLevelConfig(uint8 starLevel, tuple(uint64 popularity, uint64 reputation, uint32 fansAmount, uint64 skill, uint64 fansMaxSPLimit, uint64 maxSPAdd, uint64 dpAdd) config)",
                    "function setSupportConfig(uint8 starLevel, uint32 supportType, tuple(uint64 maxSPAdd, uint64 dpAdd, uint64 skillAdd, uint64 trainAdd, uint256 usdValue, uint256 blocksInterval, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) star, tuple(uint64 figureAdd, uint64 theoryAdd, uint64 fitnessAdd, uint64 fashionAdd, uint64 instrumentAdd, uint64 vocalAdd) trainee) config)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                ],
            },
            TokenPrices: {
                deployer: "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
                addr: "0x980071CF70E3838A33584003c14e14d7f7065218",
                abi: [
                    "constructor()",
                    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
                    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
                    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
                    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
                    "function DefiPoolType_UniswapV2() view returns (uint8)",
                    "function DefiPoolType_UniswapV3() view returns (uint8)",
                    "function MANAGER_ROLE() view returns (bytes32)",
                    "function _chainLinkFeeds(address) view returns (address)",
                    "function _defiPools(address) view returns (uint8 poolType, uint8 tokenIndex, address poolAddr)",
                    "function _univ3_getTokenPrice_0(address pairAddress, uint256 amount) view returns (uint256)",
                    "function _univ3_getTokenPrice_1(address pairAddress, uint256 amount) view returns (uint256)",
                    "function getERC20TokenUSDPrice(address tokenAddr) view returns (uint256)",
                    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
                    "function grantRole(bytes32 role, address account)",
                    "function hasRole(bytes32 role, address account) view returns (bool)",
                    "function renounceRole(bytes32 role, address account)",
                    "function revokeRole(bytes32 role, address account)",
                    "function setChainLinkTokenPriceSource(address tokenAddr, address feedAddr)",
                    "function setDefiPoolSource(address tokenAddr, tuple(uint8 poolType, uint8 tokenIndex, address poolAddr) defiPoolSource)",
                    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                ],
            },
        },
    };
}

export { contract_config, contract_abi };
