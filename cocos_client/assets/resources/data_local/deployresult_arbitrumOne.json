{
 "contracts": {
  "PioneerNFT": {
   "deployer": "0x523aEcF95f9268F844c18f57ce80978b63767EE5",
   "addr": "0x9972B8153DF648C94C8074d10F75CdA6ac2CE867",
   "abi": [
    "constructor(uint256 idStart, string name, string symbol, string baseTokenURI)",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event PioneerNFTMint(address indexed to, uint256 indexed tokenId, tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data)",
    "event PioneerNFTModified(uint256 indexed tokenId, uint256 writeableData)",
    "event NFTExtendModify(uint256 indexed tokenId, string extendName, bytes extendData)",
    "event NFTExtendName(string extendName, bytes32 nameBytes)",
    "event NFTFreeze(uint256 indexed tokenId, int32 freezeRef)",
    "event Paused(address account)",
    "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
    "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
    "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "event Unpaused(address account)",
    "function DATA_ROLE() view returns (bytes32)",
    "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
    "function FREEZE_ROLE() view returns (bytes32)",
    "function MINTER_ROLE() view returns (bytes32)",
    "function PAUSER_ROLE() view returns (bytes32)",
    "function _attrSource() view returns (address)",
    "function _codec() view returns (address)",
    "function _royalties() view returns (uint256)",
    "function addTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function approve(address to, uint256 tokenId)",
    "function balanceOf(address owner) view returns (uint256)",
    "function burn(uint256 tokenId)",
    "function exists(uint256 tokenId) view returns (bool)",
    "function extendNftData(string extendName)",
    "function fetchIncome(address erc20)",
    "function fetchIncomeEth()",
    "function freeze(uint256 tokenId)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getAttrSource() view returns (address a)",
    "function getCodec() view returns (address c)",
    "function getNftData(uint256 tokenId) view returns (tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data)",
    "function getRoleAdmin(bytes32 role) view returns (bytes32)",
    "function getTokenExtendNftData(uint256 tokenId, string extendName) view returns (bytes)",
    "function grantRole(bytes32 role, address account)",
    "function hasRole(bytes32 role, address account) view returns (bool)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isFreezed(uint256 tokenId) view returns (bool)",
    "function mint(address to, tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) returns (uint256)",
    "function mintFixedID(uint256 id, address to, tuple(uint8 mintType, uint16 nftType, uint232 fixedData, uint256 writeableData) data) returns (uint256)",
    "function modNftData(uint256 tokenId, uint256 writeableData)",
    "function modifyTokenExtendNftData(uint256 tokenId, string extendName, bytes extendData)",
    "function name() view returns (string)",
    "function notFreezed(uint256 tokenId) view returns (bool)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function pause()",
    "function paused() view returns (bool)",
    "function renounceRole(bytes32 role, address account)",
    "function revokeRole(bytes32 role, address account)",
    "function royaltyInfo(uint256, uint256 value) view returns (address receiver, uint256 royaltyAmount)",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function setAttrSource(address a)",
    "function setCodec(address c)",
    "function setRoyalties(uint256 royalties)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenByIndex(uint256 index) view returns (uint256)",
    "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function totalSupply() view returns (uint256)",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function unfreeze(uint256 tokenId)",
    "function unpause()",
    "function updateURI(string baseTokenURI)"
   ]
  }
 }
}