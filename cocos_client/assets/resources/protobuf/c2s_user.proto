package c2s_user;
syntax = "proto3";

import "./share_structure.proto";


// login
message login {
    required string name = 1;  // name, ommited
    required string uid = 2; // uid from verify result
    required string token = 3; // token from verify result
}
// create player, only 1 player per user
message create_player {
    required string pname = 1;  // player name
}
// enter game
message enter_game { }

// rookie
message player_rookie_finish { }
message player_rookie_update {
    required uint32 rookieStep = 1;
}


// ------ chain ------
message get_pending { }
message upload_pending {
    required string txhash = 1; // pending transaction hash
    required string txtype = 2; // pending transaction type
}
message get_pending_history {
    required uint32 page = 1; // page
    required uint32 size = 2; // size
}
message get_block_height { }
message check_unused_tx_status {
    required player_unused_tx txStatus = 1; // txStatus
}


// ------ get data ------
message get_battle_report { }
message get_user_settlement_info { }


// ------ player ------
// player: talk
message player_talk_select {
    required string talkId = 1;
    required int32 selectIndex = 2;
    required uint32 currStep = 3;
}
message player_piot_to_heat {
    required uint32 piotNum = 1;
}


// ------ pioneer ------
// pioneer: getinfo
message get_pioneer_info {
    repeated string pioneerIds = 1;
}
// pioneer: show/hide
message player_pioneer_change_show {
    required string pioneerId = 1;
    required bool show = 2;
}
// pioneer: move
message player_move {
    required string pioneerId = 1;
    repeated share.pos2d movePath = 2; 
    required string feeTxhash = 3;
}
// pioneer: gather
message player_gather_start {
    required string pioneerId = 1;
    required string resourceBuildingId = 2;
    required string feeTxhash = 3;
}
// pioneer: explore
message player_explore_start {
    required string pioneerId = 1;
    required string buildingId = 2;
    required string feeTxhash = 3;
}
message player_explore_npc_start {
    required string pioneerId = 1;
    required string npcId = 2;
}
message player_explore_gangster_start {
    required string pioneerId = 1;
    required string gangsterId = 2;
}
// pioneer: fight(map)
message player_fight_start {
    required string attackerId = 1;
    required string defenderId = 2;
}
// pioneer: event
message player_event_start {
    required string pioneerId = 1;
    required string buildingId = 2;
}
message player_event_select {
    required string pioneerId = 1;
    required string buildingId = 2;
    optional uint32 selectIdx = 3;
}


// ------ mapbuilding ------
// mapbuilding: getinfo
message get_mapbuilding_info {
    repeated string mapbuildingIds = 1;
}


// ------ task ------
message get_user_task_info { }


// ------ item ------
message player_item_use {
    required string itemId = 1;
    required uint32 num = 2;
}


// ------ artifact ------
message player_artifact_change {
    required string artifactId = 1; // uniqueId
    required int32 artifactEffectIndex = 2;
}
message player_artifact_combine {
    repeated string artifactIds = 1; // uniqueIds
}


// ------ worldbox ------
message player_worldbox_open {
    required uint32 boxIndex = 1;
}
message player_worldbox_open_select_artifact {
    required uint32 boxIndex = 1;
    required int32 artifactIndex = 2;
}
message player_worldbox_beginner_open {
    required uint32 boxIndex = 1;
}


// ------ inner-building ------
message player_building_levelup {
    required string innerBuildingId = 1;
}
message player_generate_troop_start {
    required uint32 num = 1;
}
message player_building_delegate_nft {
    required string innerBuildingId = 1;
    required string nftId = 2; 
}
message player_building_remove_nft {
    required string innerBuildingId = 1;
    required string nftId = 2;
}
message fetch_user_psyc { }
message player_building_pos {
    required string buildingId = 1;
    repeated uint32 pos = 2;
}


// ------ pioneerNFT ------
message player_nft_lvlup {
    required string nftId = 1;
    required uint32 levelUpNum = 2;
}
message player_nft_rankup {
    required string nftId = 1;
    required uint32 rankUpNum = 2;
}
message player_nft_skill_learn {
    required string nftId = 1;
    required string skillItemId = 2;
}
message player_nft_skill_forget {
    required string nftId = 1;
    required uint32 skillIndex = 2;
}
message player_bind_nft {
    required string pioneerId = 1;
}


// ------ wormhole ------
message player_wormhole_set_defender {
    required string pioneerId = 1;
    required uint32 index = 2;
}
message player_wormhole_set_attacker {
    required string pioneerId = 1;
    required uint32 index = 2;
    required string buildingId = 3;
}
message player_wormhole_fight_start {
    required string buildingId = 1;
}


// ------ test ------
message reborn_all { }
message reset_data { }